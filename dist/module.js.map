{"mappings":"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","sources":["src/index.ts","src/decorators/index.ts","src/decorators/attributeState.ts","src/decorators/state.ts","src/decorators/effect.ts","src/models/effects.ts","src/directives/index.ts","src/directives/assyncAppend.ts","src/directives/ref.ts","src/directives/state.ts","src/directives/style.ts","src/directives/until.ts","src/utils/index.ts","src/utils/observable-object/index.ts","src/utils/observable-object/models.ts","src/utils/observable-array/index.ts","src/webComponent/index.ts","src/webComponent/model.ts","src/controllers/bindEffect.ts","src/controllers/bindState.ts","src/controllers/bindConsumable.ts","src/templateComponent/index.ts","src/templateComponent/model.ts","src/templateComponent/types.ts","src/templateComponent/interfaces.ts","src/functions/index.ts","src/functions/render.ts"],"sourcesContent":["// export * from './dom';\nexport * from './decorators';\nexport * from './directives';\nexport * from './utils';\nexport * from './webComponent';\nexport * from './templateComponent';\n\nexport * from './functions';\n\nexport { Effects } from './models/effects';\nexport type { EffectRegistery } from './models/effects';","export * from './attributeState';\nexport * from './state';\nexport * from './effect';","import { DecoratorAttributeConfiguration, attr } from \"@microsoft/fast-element\";\nimport { state } from './state';\n\n/**\n * @AttributeState decorator\n * A decorator to define a property as both an attribute and a state on a WebComponent.\n * This combines the behavior of @attr and @State decorators.\n * \n * @param {DecoratorAttributeConfiguration} options - Options to configure the attribute.\n * @returns {Function} - The decorator function.\n * \n * @example\n * ```typescript\n * // Define an editable title component using the AttributeState decorator\n * \n * customElement({\n *     name: 'editable-title',\n *     template : html`...`\n * })\n * class EditableTitle extends WebComponent {\n *     AttributeState() level: number = 2;\n *     AttributeState() editable: string = \"false\";\n *     State value: string = \"Hello World\";\n * \n *     handleInput(event) {\n *         this.value = event.target.innerText;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();\n *     }\n * }\n * ```\n */\nexport function attrState( options:DecoratorAttributeConfiguration = {} ){\n\n  return ( target, propertyKey: string ) => {\n    attr( options )( target , propertyKey );\n    state()( target , propertyKey );\n  }\n\n}\n\nexport { attr };","import { Observable } from \"@microsoft/fast-element\";\n\nexport interface IStateOptions {\n    lazy? : boolean;\n}\n\nexport function state( options ? : IStateOptions ) {\n\n    options = Object.assign( {\n        lazy : false\n    } , options || {} );\n\n  return function (target: any, propertyName: string , value?:any , y?) {\n      let privateName = `_${propertyName}`\n\n      if(!target[propertyName])Object.defineProperty(target, propertyName, {\n          get() {\n              // Retourne la valeur de l'état depuis l'objet 'states' pour CETTE instance\n              if (!this.states) {\n                  this.states = {};  // Si l'objet 'states' n'existe pas encore, on le crée pour chaque instance\n              }\n\n              Observable.track(this, propertyName);\n\n              return this.states[privateName];\n          },\n          set(newValue: any) {\n              // Si l'objet 'states' n'existe pas encore, le créer pour CETTE instance\n              if (!this.states) {\n                  this.states = {};\n              }\n\n              const oldValue = this.states[privateName];\n\n              if(oldValue != newValue){\n\n                this.states[privateName] = newValue;\n\n                if(!options.lazy)Observable.notify( this, propertyName);\n\n                // Si l'état a changé, déclenche une action pour CETTE instance\n                if (oldValue !== newValue) {\n                    this.handleStateChange(propertyName, oldValue, newValue);\n                }\n\n              }\n\n          },\n          enumerable: true,\n          configurable: true\n      });\n\n      if( value && target[propertyName] == null )target[ propertyName ] = value;\n\n  };\n}","import { Effects } from \"../models/effects\";\nimport { IWebComponent } from \"../webComponent/interface\";\n\nexport function effect( dependencies:any[] ){\n\n  return ( target:IWebComponent , propertyName: string , value = null ) => {\n\n    if( !target[propertyName] )Object.defineProperty(target, propertyName, {\n      get() {\n          // Retourne la valeur de l'état depuis l'objet 'states' pour CETTE instance\n          if (!this.effects) {\n              this.effects = Effects();  // Si l'objet 'states' n'existe pas encore, on le crée pour chaque instance\n          }\n\n          return this.effects.get( propertyName );\n      },\n      set(newValue: any) {\n          // Si l'objet 'states' n'existe pas encore, le créer pour CETTE instance\n          if (!this.effects) {\n            this.effects = Effects();\n          }\n\n          this.effects.set( propertyName , {\n            name : propertyName,\n            dependencies : dependencies,\n            callback : newValue\n          } )\n\n      },\n      enumerable: true,\n      configurable: true\n    });\n    \n    if( value && target[propertyName] == null )target[ propertyName ] = value;\n  \n  }\n\n}","import { WebComponent } from \"../webComponent\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { IWebComponent } from \"src/webComponent/interface\";\n\nexport type EffectRegistery = ( Map< string , IEffect > & { execute( dependency?:string ):void } );\n\nexport interface IEffect{\n  name:string;\n  dependencies : string[];\n  callback:any;\n}\n\nexport function Effects( effects?:Record< string , IEffect > ):EffectRegistery{\n\n  const effects_register = new Map() as EffectRegistery;\n\n  if(effects)Object.values(effects).forEach((effect) => {\n    this.set( effect.name , effect )\n  });\n\n  effects_register.execute = function( dependency?:string ){\n\n    let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n    let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n\n    effects_with_depedencies.forEach(( effect ) => {\n\n      let { dependencies , callback:useEffect , name } = effect;\n\n      if(dependency && dependencies.includes( dependency )){\n        console.log( `Math effect ${dependency}` )\n        useEffect();\n      }\n\n    })\n\n    if( !dependency )effects_without_depedencies.forEach(( effect ) => {\n\n      let { callback:useEffect } = effect;\n      try{\n        useEffect();\n      }\n      catch(error){\n        console.error(error);\n      }\n\n    })\n\n  }\n\n  return effects_register;\n\n}\n\n// export class Effects extends Map< string , IEffect >{\n\n//   execute( dependency?:string ){\n\n//     let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n//     let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n\n//     effects_with_depedencies.forEach(( effect ) => {\n\n//       let { dependencies , callback:useEffect , name } = effect;\n\n//       if(dependency && dependencies.includes( dependency )){\n//         useEffect();\n//       }\n\n//     })\n\n//     if( !dependency )effects_without_depedencies.forEach(( effect ) => {\n\n//       let { callback:useEffect } = effect;\n//       try{\n//         useEffect();\n//       }\n//       catch(error){\n//         console.error(error);\n//       }\n\n//     })\n\n//   }\n\n//   constructor( effects?:Record< string , IEffect > ){\n//     super();\n\n//     if(effects)Object.values(effects).forEach((effect) => {\n//       this.set( effect.name , effect )\n//     });\n\n//   }\n\n// }","import {\n  when,\n  repeat,\n  // ref,\n  children,\n  elements,\n  slotted,\n} from '@microsoft/fast-element';\n\nexport {\n  when,\n  repeat,\n  children,\n  elements,\n  slotted\n}\n\nexport * from './assyncAppend.js';\nexport * from './ref.js';\nexport * from './state.js';\nexport * from './style.js';\nexport * from './until.js';","import { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , html , Binding } from '@microsoft/fast-element';\nimport type { Subscriber , BindingDirective, ExpressionObserver } from '@microsoft/fast-element';\n\nexport class AsyncAppendBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class AsyncAppendDirective<T = any> extends HTMLBindingDirective {\n\n  fn:Promise<T> = null;\n  callback:( result:T ) => ViewTemplate = null;\n\n  constructor( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) {\n    super( new AsyncAppendBindig( (x) => null ) );\n    Object.assign( this , { fn , callback } );\n  }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n\n    return {\n        bind : (source:HTMLView ) => {\n\n          let target = source.targets[targetNodeId];\n\n          this.fn\n          .then(( result ) => {\n            this.callback( result ).render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n          .catch(( error ) => {\n            console.error(error)\n            html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ){\n    return new AsyncAppendDirective( fn , callback);\n  }\n\n}\n\nHTMLDirective.define( AsyncAppendDirective );\n\nexport { Subscriber }\n\nexport const asyncAppend = <T = any>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) => AsyncAppendDirective.use<T>( fn , callback );","import { HTMLDirective, HTMLView, Binding, BindingDirective, ExpressionObserver, Subscriber, StatelessAttachedAttributeDirective } from '@microsoft/fast-element';\n\nexport interface IElementRef< T extends Node >{\n  value : T;\n}\n\nexport function createRef< T extends Node >():IElementRef<T>{\n  return {\n    value : null\n  }\n}\n\nexport class RefDirective<T extends Node> extends StatelessAttachedAttributeDirective<IElementRef<T>> {\n\n  options:IElementRef<T> = null;\n\n  constructor( options:IElementRef<T> ) {\n    super( options );\n    Object.assign( this , { options } )\n  }\n\n  bind(controller: HTMLView): void {\n\n    let { lastChild:target } = controller;\n\n    this.options.value = target as any;\n\n  }\n\n  static use<T extends Node>( options:IElementRef<T> ){\n    return new RefDirective<T>( options );\n  }\n\n}\n\nHTMLDirective.define( RefDirective )\n\nexport const ref = <T extends Node>( options:IElementRef<T> ) => RefDirective.use<T>( options );","// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nimport { State , createState } from '@lithium-framework/state';\nimport { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class StateBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StateDirective<T = any> extends HTMLBindingDirective {\n\n    _state:State<T> = null;\n    get state(){ return this._state.mutator[0] }\n    set state( value:T ){ this._state.mutator[1](value) }\n\n    _callback:( newValue:T ) => ViewTemplate = null;\n\n    constructor( state: State<T> , callback:( newValue:T ) => ViewTemplate ) {\n        super( new StateBindig( (x) => null ) );\n        this._state = state;\n        this._callback = callback;\n    }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n    let view:HTMLView = null;\n\n    return {\n        bind : (source:HTMLView) => {\n\n            let target = source.targets[targetNodeId];\n\n            if(this._callback){\n\n                this._state.subscribe(() => {\n                    view.dispose();\n                    view = this._callback( this.state ).render( source , target.parentElement );\n                });\n\n                view = this._callback( this.state ).render( source , target.parentElement );\n\n            }\n\n            else{\n\n                this._state.subscribe(() => {\n                    if(\"textContent\" in target){\n                        target.textContent = `${this.state}`;\n                    }\n                });\n\n                if(\"textContent\" in target){\n                    target.textContent = `${this.state}`;\n                }\n\n            }\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T = any>( state , callback ){\n    return new StateDirective<T>( state , callback )\n  }\n\n}\n\nHTMLDirective.define( StateDirective )\n\nexport const useState = <T>( state: State<T> , callback?:( newValue:T ) => ViewTemplate ) => StateDirective.use<T>( state , callback );","import { HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\nimport { Properties } from '../utils/css-object';\n\nexport class StyleBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StyleDirective extends HTMLBindingDirective {\n\n  css:Properties = null;\n\n  constructor( css:Properties ) {\n      super( new StyleBindig( (x) => null ) );\n      Object.assign( this , { css } );\n\n  }\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n  let view:HTMLView = null;\n\n  return {\n      bind : (source:HTMLView) => {\n\n        let target = source.targets[targetNodeId];\n        if(target instanceof HTMLElement)Object.assign( target.style , this.css );\n\n      },\n      unbind : () => {\n          // Nettoyage si nécessaire\n      }\n  };\n\n}\n\nstatic use( css:Properties ){\n  return new StyleDirective( css )\n}\n\n}\n\nHTMLDirective.define( StyleDirective );\n\nexport const style = ( css:Properties ) => StyleDirective.use( css );","import { ViewTemplate , html , HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class UntilBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class UntilDirective extends HTMLBindingDirective {\n\n  fn:Promise<ViewTemplate> = null;\n  template:ViewTemplate = null;\n\n  constructor( fn:Promise<ViewTemplate> , template:ViewTemplate ) {\n    super( new UntilBindig( (x) => null ) );\n    Object.assign( this , { fn , template } );\n}\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n\n  return {\n    bind : (source:HTMLView) => {\n\n      let target = source.targets[targetNodeId];\n      let loading = this.template.render( source , target instanceof HTMLElement ? target : target.parentElement );\n\n      this.fn\n      .then(( result ) => {\n        loading.dispose()\n        result.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n      .catch(( error ) => {\n        console.error(error);\n        loading.dispose();\n        html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n\n    },\n    unbind : () => {\n        // Nettoyage si nécessaire\n    }\n};\n\n}\n\nstatic use( fn:Promise<ViewTemplate> , template: ViewTemplate ){\n  return new UntilDirective( fn , template);\n}\n\n}\n\nHTMLDirective.define( UntilDirective );\n\nexport const until = ( fn:Promise<ViewTemplate> , template:ViewTemplate ) => UntilDirective.use( fn , template );","export {\n  // _cssObject,\n  // Properties,\n  // createCSS\n} from './css-object';\n\nexport {\n  createObservableObject,\n} from './observable-object';\n\nexport {\n  ObservableArray,\n} from './observable-array';\n\nexport {\n  ObservableObject,\n  type ObservableProxy,\n} from './observable-object/models';\n\nexport { \n  State,\n  createState\n} from '@lithium-framework/state';\n\nexport { \n  createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator\n} from '@lithium-framework/context';\n\nexport {\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  uuid\n} from '@lithium-framework/huid';","import { ObservableObject } from './models';\n\nexport function createObservableObject< Key extends string , Value extends any >( initialObject:Record< Key , Value > ){\n  return ObservableObject.init< Key , Value >( initialObject );\n}","import { Observable } from \"@microsoft/fast-element\";\n\nexport type ObservableProxy< key extends string , value extends any = any > = Record<string , value> & { \n  subscribe : ObservableObject< key , value >[\"subscribe\"] , \n  unsubscribe : ObservableObject< key , value >[\"unsubscribe\"],\n  keys():string[];\n  values():any[];\n}\n\nexport class ObservableObject< key extends string , value extends any = any > extends Object{\n\n  static init< key extends string , value extends any >( initialObject:Record<key , value> ){\n    let observabe = new ObservableObject< key , value >( initialObject );\n    return observabe.createProxy.bind(observabe)();\n  }\n\n  $data:Record<string , value> = {};\n  private observers: Record<string, Set<(newValue: any, oldValue: any) => void>> = {};\n\n  constructor( initialObject:Record<key , value> ){\n    super();\n    Object.assign( this.$data , initialObject );\n  };\n\n  // Enregistre un observateur pour une propriété spécifique\n  subscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (!this.observers[propKey]) {\n      this.observers[propKey] = new Set();\n    }\n    this.observers[propKey].add(callback);\n  }\n\n  // Supprime un observateur pour une propriété spécifique\n  unsubscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (this.observers[propKey]) {\n      this.observers[propKey].delete(callback);\n    }\n  }\n\n  // Méthode appelée pour notifier les observateurs d'un changement de valeur\n  private notify(propKey: string, newValue: any, oldValue: any) {\n    if (this.observers[propKey]) {\n      this.observers[propKey].forEach(callback => callback(newValue, oldValue));\n    }\n  }\n\n  set = <T extends value = any>( key:key , value:T ) => {   \n\n    const oldValue = this.$data[`_${key}`];\n\n    this.$data[`_${key}`] = value as any;\n    Observable.defineProperty( this.$data, key);\n    this.notify(key, value, oldValue);\n    return this.$data[key];\n\n  }\n\n  createProxy():ObservableProxy< key , value > {\n\n    return new Proxy( this.$data , {\n      get : ( store , propKey:string ) => {\n\n        let result:any = undefined;\n\n        if( propKey == \"subscribe\" )return this.subscribe;\n        else if( propKey == \"unsubscribe\" )return this.unsubscribe;\n        else if( propKey == \"keys\" )return () => Object.keys( this.$data );\n        else if( propKey == \"values\" )return () => Object.values( this.$data );\n\n        try{\n          result = store[propKey];\n        }\n        catch(error){\n          console.error(error);\n        }\n        finally{\n          return result;\n        }\n\n      },\n      set : ( store , propKey: string, value: any ) => {\n        const oldValue = store[propKey];\n\n        if(store[propKey]){\n          store[propKey] = value;\n        }\n        else {\n          store[ `_${propKey}` ] = value;\n          Observable.defineProperty( store, propKey);\n        }\n\n        this.notify(propKey, value, oldValue);\n\n        return true;\n  \n      }\n    }) as ObservableProxy< key , value >;\n\n  }\n\n}","export function ObservableArray(init: Array<any> = []) {\n\n  const observers = new Set<(operation: string, args: any, result: any) => void>();\n\n  const notifyObservers = (operation: string, args: any, result: any) => {\n    observers.forEach(callback => callback(operation, args, result));\n  };\n\n  const arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'reverse'];\n\n  return new Proxy(init, {\n    get(target, property, receiver) {\n      // Si on accède à une méthode de tableau, la redéfinir pour inclure la notification\n      if (arrayMethods.includes(property as string)) {\n        return (...args: any[]) => {\n          const result = Array.prototype[property].apply(target, args);\n          // Notifier les observateurs du changement\n          notifyObservers(property as string, args, result);\n          return result;\n        };\n      }\n\n      return Reflect.get(target, property, receiver);\n    },\n\n    set(target, property, value, receiver) {\n      const oldValue = target[property];\n      const result = Reflect.set(target, property, value, receiver);\n\n      if (oldValue !== value) {\n        notifyObservers('set', { index: property, value }, result);\n      }\n\n      return result;\n    },\n  });\n}\n\nObservableArray.prototype.subscribe = function (callback: (operation: string, args: any, result: any) => void) {\n  this.observers.add(callback);\n};\n\nObservableArray.prototype.unsubscribe = function (callback: (operation: string, args: any, result: any) => void) {\n  this.observers.delete(callback);\n};\n","export { \n  customElement , \n  css,\n  // html,\n  ViewTemplate,\n  HTMLView,\n  volatile,\n} from \"@microsoft/fast-element\";\n\nimport {\n  html as _html,\n  HTMLTemplateTag\n} from \"@microsoft/fast-element\"\n\nexport const html:HTMLTemplateTag = _html;\n\nexport { \n  WebComponent \n} from './model';","import { FASTElement, Observable } from \"@microsoft/fast-element\";\nimport { IWebComponent } from \"./interface\";\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\n/* The WebComponent class extends FASTElement and provides state management functionality using\nObservableObject. */\nexport class WebComponent extends FASTElement implements IWebComponent{\n\n  constructor(){\n    super();\n  }\n\n  get bindState():< States , Value >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name : string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  // onStateChange?: (name: string, oldValue: any, newValue: any) => void = null;\n  stateChangeCallbacks:Set< ( (name: string, oldValue: any, newValue: any) => void ) > = new Set();\n  get onStateChange(){\n    return (function( this : WebComponent & IWebComponent , callback : (name: string, oldValue: any, newValue: any) => void ){\n  \n      if(!this.stateChangeCallbacks.has( callback )){\n        this.stateChangeCallbacks.add( callback );\n      }\n  \n    }).bind(this)\n  }\n\n  handleStateChange( this:WebComponent & IWebComponent, propertyName, oldValue, newValue ){\n\n    (this.stateChangeCallbacks || []).forEach(( callback ) => {\n      callback( propertyName, oldValue, newValue );\n    })\n\n    this[propertyName] = newValue;\n    this.effects?.execute( propertyName );\n\n  }\n\n  connectedCallback( this:IWebComponent ) {\n    this.effects?.execute();\n    super.connectedCallback();\n  }\n\n  static define = FASTElement.define\n  \n}","import { WebComponent } from \"../webComponent\";\nimport { IEffect } from \"../models/effects\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { effect } from \"../decorators\";\n\nexport function bindEffect( this:WebComponent | ViewExecutionContext , effect_name:string , callback : () => void , dependencies : any[] ){\n\n  effect( dependencies )( this , effect_name , callback );\n\n}","import { ObservableObject, ObservableProxy } from \"../utils\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { WebComponent } from \"../webComponent\";\nimport { state } from \"../decorators\";\n\nexport function bindState< States , Value >( this:WebComponent | ViewExecutionContext , key:keyof States , value:Value ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n  function useState( this:ViewExecutionContext , key:keyof States ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n    return [ this[key as string] , ( newValue ) => {\n      this[key as string] = newValue;\n    } ]\n\n  }\n\n  state()( this , key as string , value );\n  return useState.bind( this )( key );\n\n}","import { WebComponent } from \"src/webComponent\";\nimport { state } from \"../decorators\";\nimport { ViewExecutionContext } from \"src/templateComponent\";\nimport { ObservableProxy } from \"../utils\";\n\nexport function bindConsumable<Value = any>( this:WebComponent | ViewExecutionContext , key:string , value:Value ){\n  state()( this , key , value , false );\n}","export * from './model';\nexport * from './types';\nexport * from './interfaces';","import { ViewContext } from './types';\nimport { EffectRegistery, Effects, IEffect } from '../models/effects';\nimport { IWebComponent } from '../webComponent/interface';\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\nexport class ViewExecutionContext< T = any , States extends Record<string , any> = Record<string , any> > extends Object implements IWebComponent{\n\n  states = {};\n  effects?: EffectRegistery = Effects();\n\n  constructor(data?:T ){\n    super();\n\n    Object.assign( this , data );\n\n  }\n\n  get bindState():< Value = never >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name:string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  private stateChangeCallbacks:Set< ( (name: string, oldValue: any, newValue: any) => void ) > = new Set();\n  get onStateChange(){\n    return (function( this : ViewExecutionContext , callback : (name: string, oldValue: any, newValue: any) => void ){\n  \n      if(!this.stateChangeCallbacks.has( callback )){\n        this.stateChangeCallbacks.add( callback );\n      }\n  \n    }).bind(this)\n  }\n\n  handleStateChange = ( propertyName, oldValue, newValue ) => {\n    (this.stateChangeCallbacks || []).forEach(( callback ) => {\n      callback( propertyName, oldValue, newValue );\n    })\n    this[propertyName] = newValue;\n    this[\"effects\"].execute( propertyName );\n  }\n\n  static init< T extends Record<string , any> = {} >( data?:T ):ViewContext<T>{\n      return new ViewExecutionContext( data ) as any as ViewContext<T>;\n  }\n\n}","import { ViewExecutionContext } from \"./model\";\n\nexport type ViewContext< T = Record<string , any> , States = Record<string , any> > = ViewExecutionContext<T , States> & T;","export {};","export * from './render';","import { ViewTemplate } from '@microsoft/fast-element';\nimport { ViewExecutionContext } from '../templateComponent/model';\nimport { WebComponent } from '../webComponent';\n\n// Fonction pour observer les enfants ajoutés\nconst observeChilds = (\n  container: HTMLElement,\n  config: MutationObserverInit,\n  callback: (node: Node) => void\n) => {\n  // Crée un MutationObserver\n  const observer = new MutationObserver((mutationsList, observer) => {\n    // Parcourt toutes les mutations détectées\n    mutationsList.forEach(mutation => {\n      if (mutation.type === 'childList') {\n        // Vérifie si des nœuds ont été ajoutés\n        mutation.addedNodes.forEach(node => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            console.log('Nouvel élément ajouté :', node);\n            callback(node);  // Exécute le callback avec le nœud ajouté\n          }\n        });\n      }\n    });\n  });\n\n  // Démarre l'observation\n  observer.observe(container, config);\n\n  // Retourne l'observer pour pouvoir le déconnecter si besoin\n  return observer;\n};\n\nexport function render< T extends Record<string , any> = {} , Storage extends Record<string , any> = Record<string , any> >(template: ViewTemplate<ViewExecutionContext<any, Record<string, any>>, any>, container: HTMLElement = document.body , data = {} ) {\n\n  let context = ViewExecutionContext.init(data);\n\n  let observer = observeChilds( \n    container, \n    {\n      childList: true,  // Observe les ajouts et suppressions d'enfants\n      subtree: false    // Si true, observe tous les descendants du parent\n    },\n    ( node ) => {\n\n      if( node instanceof WebComponent == false ){\n        if(context[\"effects\"])context[\"effects\"].execute();\n      }\n\n      observer.disconnect();\n    }\n  );\n\n  let element = template.render( context , container);\n\n  return element;\n\n}"],"names":["Effects","EffectRegistery","DecoratorAttributeConfiguration","attr","state","attrState","options","target","propertyKey","Observable","IStateOptions","lazy","Object","assign","propertyName","value","y","privateName","defineProperty","get","states","track","set","newValue","oldValue","notify","handleStateChange","enumerable","configurable","IWebComponent","effect","dependencies","effects","name","callback","WebComponent","ViewExecutionContext","Map","IEffect","execute","dependency","Record","effects_register","values","forEach","effects_without_depedencies","filter","length","effects_with_depedencies","useEffect","includes","console","log","error","when","repeat","children","elements","slotted","ViewTemplate","HTMLDirective","HTMLBindingDirective","HTMLView","html","Binding","Subscriber","BindingDirective","ExpressionObserver","AsyncAppendBindig","createObserver","subscriber","directive","bind","controller","AsyncAppendDirective","constructor","fn","Promise","T","result","x","createBehavior","targetNodeId","source","targets","then","render","HTMLElement","parentElement","catch","unbind","use","define","asyncAppend","StatelessAttachedAttributeDirective","IElementRef","Node","createRef","RefDirective","lastChild","ref","State","createState","StateBindig","StateDirective","_state","mutator","_callback","view","subscribe","dispose","textContent","useState","Properties","StyleBindig","StyleDirective","css","style","UntilBindig","UntilDirective","template","loading","until","createObservableObject","ObservableArray","ObservableObject","ObservableProxy","createStorage","uuid","initialObject","Key","Value","init","key","unsubscribe","keys","observabe","createProxy","$data","observers","propKey","Set","add","delete","Proxy","store","undefined","Array","operation","args","notifyObservers","arrayMethods","property","receiver","prototype","apply","Reflect","index","customElement","volatile","_html","HTMLTemplateTag","FASTElement","bindEffect","bindState","bindConsumable","stateChangeCallbacks","States","setter","effect_name","onStateChange","this","has","connectedCallback","ViewContext","data","observeChilds","container","config","MutationObserverInit","node","observer","MutationObserver","mutationsList","mutation","type","addedNodes","nodeType","ELEMENT_NODE","observe","document","body","context","childList","subtree","disconnect","element"],"version":3,"file":"module.js.map"}