{"mappings":"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","sources":["src/index.ts","src/decorators/index.ts","src/decorators/attributeState.ts","src/decorators/state.ts","src/templateComponent/model.ts","src/utils/observable-object/models.ts","src/models/effects.ts","src/controllers/bindEffect.ts","src/controllers/bindState.ts","src/controllers/bindConsumable.ts","src/webComponent/model.ts","src/decorators/effect.ts","src/templateComponent/index.ts","src/templateComponent/types.ts","src/templateComponent/interfaces.ts","src/directives/index.ts","src/directives/assyncAppend.ts","src/directives/ref.ts","src/directives/state.ts","src/directives/style.ts","src/directives/until.ts","src/utils/index.ts","src/utils/observable-object/index.ts","src/webComponent/index.ts","src/functions/index.ts","src/functions/render.ts"],"sourcesContent":["// export * from './dom';\nexport * from './decorators';\nexport * from './directives';\nexport * from './utils';\nexport * from './webComponent';\nexport * from './templateComponent';\n\nexport * from './functions';\n\nexport { Effects } from './models/effects';","export * from './attributeState';\nexport * from './state';\nexport * from './effect';","import { DecoratorAttributeConfiguration, attr } from \"@microsoft/fast-element\";\nimport { state } from './state';\n\n/**\n * @AttributeState decorator\n * A decorator to define a property as both an attribute and a state on a WebComponent.\n * This combines the behavior of @attr and @State decorators.\n * \n * @param {DecoratorAttributeConfiguration} options - Options to configure the attribute.\n * @returns {Function} - The decorator function.\n * \n * @example\n * ```typescript\n * // Define an editable title component using the AttributeState decorator\n * \n * customElement({\n *     name: 'editable-title',\n *     template : html`...`\n * })\n * class EditableTitle extends WebComponent {\n *     AttributeState() level: number = 2;\n *     AttributeState() editable: string = \"false\";\n *     State value: string = \"Hello World\";\n * \n *     handleInput(event) {\n *         this.value = event.target.innerText;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();\n *     }\n * }\n * ```\n */\nexport function attrState( options:DecoratorAttributeConfiguration = {} ){\n\n  return ( target, propertyKey: string ) => {\n    attr( options )( target , propertyKey );\n    state( target , propertyKey );\n  }\n\n}\n\nexport { attr };","import { observable } from \"@microsoft/fast-element\";\nimport { ViewExecutionContext } from \"../templateComponent/model\";\nimport { WebComponent } from \"../webComponent/model\";\n\n/**\n * @State decorator\n * A decorator to define a state property on a WebComponent.\n * This state property is observable, and its changes are detected and handled.\n * \n * @param {Object} target - The prototype of the class where the state property is defined.\n * @param {string} propertyKey - The name of the property to be defined as a state.\n * \n * @example\n * ```typescript\n * /// Define a counter component using the State decorator\n\n * customElement({\n *     name: 'counter-element',\n *     template: html`...`\n * })\n * class CounterElement extends WebComponent {\n *     State count: number = 0;\n * \n *     increment() {\n *         this.count += 1;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();s\n *     }\n * }\n * ```\n */\nexport function state(target: WebComponent | ViewExecutionContext, propertyKey: string , value:any = null , constructible = false){\n\n  if(constructible)target.constructor[\"states\"] = target.constructor[\"states\"] || {};\n\n  if( target instanceof WebComponent ){\n\n    Object.defineProperty( target , propertyKey , {\n      get(){\n        return target.constructor[\"states\"][propertyKey];\n      },\n      set(newValue){\n        target.constructor[\"states\"][propertyKey] = newValue;\n        return true;\n      },\n      enumerable: true,\n      configurable: true\n    } );\n\n    observable( target.constructor[\"states\"] , propertyKey);\n\n  }\n\n  if( target instanceof ViewExecutionContext ){\n\n    if( propertyKey in target == false ){\n\n      Object.defineProperty( target , propertyKey , {\n        get(){\n          return target.$states[propertyKey];\n        },\n        set(newValue){\n          target.$states[propertyKey] = newValue;\n          return true;\n        },\n        enumerable: true,\n        configurable: true\n      } );\n  \n      observable( target.$states , propertyKey);\n  \n      if(value && target[propertyKey] == null)target[propertyKey] = value;\n  \n    }\n\n  }\n\n}","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ObservableObject, ObservableProxy } from '../utils/observable-object/models';\nimport { state } from '../decorators';\nimport { ViewContext } from './types';\nimport { Effects, IEffect } from '../models/effects';\nimport { IWebComponent } from '../webComponent/interface';\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\nexport class ViewExecutionContext< T = any , States extends Record<string , any> = Record<string , any> > extends Object implements IWebComponent{\n\n  static states = {};\n  static effects = {};\n\n  $states:ObservableProxy< any , any > = ObservableObject.init( this.constructor[\"states\"] );\n  $effects:Effects = new Effects( this.constructor[\"effects\"] ).bind( this );\n  \n  // bindState = <T>( key:keyof States , value:T ):[ state:T , setter:( newValue:T ) => void ] => {\n\n  //   function useState( this:ViewExecutionContext , key:keyof States ):[ state:T , setter:( newValue:T ) => void ]{\n  //     return [ this[key as string] , ( newValue ) => {\n  //       console.log({ newValue })\n  //       this[key as string] = newValue;\n  //     } ]\n  //   }\n\n  //   if(this.#_state_keys.includes(key as string))return useState.bind(this)( key );\n\n  //   Object.defineProperty( this , key , {\n  //     get(){\n  //       return JSON.parse(this.states[key]);\n  //     },\n  //     set( value ){\n        \n  //       if(!this.#_state_keys.includes(key)){\n\n  //         this.#_state_keys.push( key );\n\n  //         this.$states = ObservableObject.init({\n  //           [key] :  JSON.stringify(value),\n  //           ...Object.fromEntries(\n  //             new Map(\n  //               Array.from( this.#_state_keys , ( key ) => {\n  //                 return [ key , this.$states[`${key}`] ]\n  //               } )\n  //             )\n  //           )\n  //         });\n\n  //       }\n\n  //       this.$states[key] = JSON.stringify(value);\n\n  //     }\n  //   });\n\n  //   this[key as string] = value;\n  //   return useState.bind(this)( key );\n\n  // }\n\n  // bindConsumable = <T = any>( key:string , value:T ) => {\n  //   state( this , key , value , false );\n  // }\n\n  // bindEffect = ( callback : () => void , dependencies : any[] ) => {\n  //   this.$effects.push( {\n  //     dependencies,\n  //     callback\n  //   } as IEffect )\n  // }\n\n  get bindState():< Value = never >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name:string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  constructor( data?:T ){\n    super();\n    Object.assign( this , data );\n  }\n\n  static init< T extends Record<string , any> = {} >( data?:T ):ViewContext<T>{\n      return new ViewExecutionContext( data ) as any as ViewContext<T>;\n  }\n\n}","import { Observable } from \"@microsoft/fast-element\";\n\nexport type ObservableProxy< key extends string , value extends any = any > = Record<string , value> & { \n  subscribe : ObservableObject< key , value >[\"subscribe\"] , \n  unsubscribe : ObservableObject< key , value >[\"unsubscribe\"],\n  keys():string[];\n  values():any[];\n}\n\nexport class ObservableObject< key extends string , value extends any = any > extends Object{\n\n  static init< key extends string , value extends any >( initialObject:Record<key , value> ){\n    let observabe = new ObservableObject< key , value >( initialObject );\n    return observabe.createProxy();\n  }\n\n  $data:Record<string , value> = {};\n  private observers: Record<string, Set<(newValue: any, oldValue: any) => void>> = {};\n\n  constructor( initialObject:Record<key , value> ){\n    super();\n    Object.assign( this.$data , initialObject );\n  };\n\n  // Enregistre un observateur pour une propriété spécifique\n  subscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (!this.observers[propKey]) {\n      this.observers[propKey] = new Set();\n    }\n    this.observers[propKey].add(callback);\n  }\n\n  // Supprime un observateur pour une propriété spécifique\n  unsubscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (this.observers[propKey]) {\n      this.observers[propKey].delete(callback);\n    }\n  }\n\n  // Méthode appelée pour notifier les observateurs d'un changement de valeur\n  private notify(propKey: string, newValue: any, oldValue: any) {\n    if (this.observers[propKey]) {\n      this.observers[propKey].forEach(callback => callback(newValue, oldValue));\n    }\n  }\n\n  set = <T extends value = any>( key:key , value:T ) => {   \n\n    const oldValue = this.$data[`_${key}`];\n\n    this.$data[`_${key}`] = value as any;\n    Observable.defineProperty( this.$data, key);\n    this.notify(key, value, oldValue);\n    return this.$data[key];\n\n  }\n\n  createProxy():ObservableProxy< key , value > {\n\n    return new Proxy( this.$data , {\n      get : ( store , propKey:string ) => {\n\n        let result:any = undefined;\n\n        if( propKey == \"subscribe\" )return this.subscribe;\n        else if( propKey == \"unsubscribe\" )return this.unsubscribe;\n        else if( propKey == \"keys\" )return () => Object.keys( this.$data );\n        else if( propKey == \"values\" )return () => Object.values( this.$data );\n\n        try{\n          result = store[propKey];\n        }\n        catch(error){\n          console.error(error);\n        }\n        finally{\n          return result;\n        }\n\n      },\n      set : ( store , propKey: string, value: any ) => {\n        const oldValue = store[propKey];\n\n        if(store[propKey]){\n          store[propKey] = value;\n        }\n        else {\n          store[ `_${propKey}` ] = value;\n          Observable.defineProperty( store, propKey);\n        }\n\n        this.notify(propKey, value, oldValue);\n\n        return true;\n  \n      }\n    }) as ObservableProxy< key , value >;\n\n  }\n\n}\n\nexport { Observable };","import { WebComponent } from \"../webComponent\";\nimport { ViewExecutionContext } from \"../templateComponent\";\n\nexport interface IEffect{\n  name:string;\n  dependencies : string[];\n  callback:any;\n}\n\nexport class Effects extends Map< string , IEffect >{\n\n  private target:WebComponent | ViewExecutionContext = null;\n\n  bind( target ){\n    this.target = target;\n    return this;\n  }\n\n  execute(){\n\n    let effects = this.target.constructor[\"effects\"];\n\n    let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n    let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n\n    effects_with_depedencies.forEach(( effect ) => {\n\n      let { dependencies , callback:useEffect , name } = effect;\n\n      dependencies.forEach(( dependency ) => {\n\n        console.log({ \"subscribe\" : this.target.$states })\n\n        this.target.$states.subscribe( dependency , useEffect );\n\n      })\n\n    })\n\n    effects_without_depedencies.forEach(( effect ) => {\n\n      console.log({ effect })\n\n      let { callback:useEffect } = effect;\n      useEffect();\n\n    })\n\n    // this.forEach( effect => {\n      \n    //   let { dependencies , callback:useEffect } = effect;\n    //   if(!dependencies)dependencies = [];\n\n    //   if(dependencies.length > 0){\n\n    //     dependencies.forEach(( dependency ) => {\n    //       this.target.$states.subscribe( dependency , useEffect )\n    //     })\n\n    //   }\n    //   else useEffect();\n\n    // });\n\n  }\n\n  constructor( effects?:Record< string , IEffect > ){\n    super();\n\n    if(effects)Object.values(effects).forEach((effect) => {\n      console.log({ effect })\n      this.set( effect.name , effect )\n    });\n\n    console.log({ self : this , effects , values : Object.values({...effects}) , keys : Object.keys({...effects}) });\n\n  }\n\n}","import { WebComponent } from \"../webComponent\";\nimport { IEffect } from \"../models/effects\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { effect } from \"../decorators\";\n\nexport function bindEffect( this:WebComponent | ViewExecutionContext , effect_name:string , callback : () => void , dependencies : any[] ){\n\n  effect( dependencies )( this , effect_name , callback );\n\n}","import { ObservableObject } from \"../utils\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { WebComponent } from \"../webComponent\";\nimport { state } from \"../decorators\";\n\nexport function bindState< States , Value >( this:WebComponent | ViewExecutionContext , key:keyof States , value:Value ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n  function useState( this:ViewExecutionContext , key:keyof States ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n    return [ this[key as string] , ( newValue ) => {\n      this[key as string] = newValue;\n    } ]\n\n  }\n\n  state( this , key as string , value );\n  return useState.bind( this )( key );\n\n}","import { WebComponent } from \"src/webComponent\";\nimport { state } from \"../decorators\";\nimport { ViewExecutionContext } from \"src/templateComponent\";\n\nexport function bindConsumable<Value = any>( this:WebComponent | ViewExecutionContext , key:string , value:Value ){\n  state( this , key , value , false );\n}","import { FASTElement } from \"@microsoft/fast-element\";\nimport { ObservableObject, ObservableProxy } from '../utils/observable-object/models';\nimport { IWebComponent } from \"./interface\";\nimport { Effects } from \"../models/effects\";\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\n/* The WebComponent class extends FASTElement and provides state management functionality using\nObservableObject. */\nexport class WebComponent extends FASTElement implements IWebComponent{\n\n  /* The `static states = {};` line is declaring a static property named `states` on the `WebComponent`\n  class and initializing it as an empty object `{}`. This property is intended to hold the initial\n  state values for the component. By defining it as a static property, it is shared among all\n  instances of the `WebComponent` class rather than being specific to individual instances. This\n  allows all instances of the class to access and modify the same set of state values. */\n  static states = ObservableObject.init({});\n  static effects = {};\n\n  /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n  instance property named `` on the `WebComponent` class. This property is being set to the\n  result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n  values defined in the `states` static property of the `WebComponent` class\n  (`this.constructor[\"states\"]`). */\n  get $states():ObservableProxy< any , any > { return this.constructor[\"states\"] };\n  get $effects():Effects { return new Effects( this.constructor[\"effects\"] ).bind( this ) };\n\n  constructor(){\n    super();\n  }\n\n  get bindState():< States , Value >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name : string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  connectedCallback() {\n    this.$effects.execute();\n    super.connectedCallback();\n  }\n\n  static define = FASTElement.define\n  \n}","import { ViewExecutionContext } from \"../templateComponent\";\nimport { WebComponent } from \"../webComponent/model\";\n\nexport function effect( dependencies:any[] ){\n\n  return ( target:WebComponent | ViewExecutionContext , propertyKey: string , value = null ) => {\n\n    if( target instanceof WebComponent ){\n\n      Object.defineProperty( target , propertyKey , {\n        get(){\n          return target.constructor[\"effects\"][ propertyKey ];\n        },\n        set(newValue){\n          target.constructor[\"effects\"][ propertyKey ] = {\n            name : propertyKey,\n            dependencies : dependencies as any,\n            callback : newValue\n          };\n          return true;\n        },\n        enumerable: true,\n        configurable: true\n      });\n\n    }\n\n    if( target instanceof ViewExecutionContext ){\n\n      if(!target[propertyKey])Object.defineProperty( target , propertyKey , {\n        get(){\n          return target.$effects.get( propertyKey );\n        },\n        set(newValue){\n  \n          target.$effects.set( propertyKey , {\n            name : propertyKey,\n            dependencies : dependencies as any,\n            callback : newValue\n          });\n  \n          return true;\n        },\n        enumerable: true,\n        configurable: true\n      });\n  \n      if( value )target[ propertyKey ] = value;\n\n    }\n  \n  }\n\n}","export * from './model';\nexport * from './types';\nexport * from './interfaces';","import { ViewExecutionContext } from \"./model\";\n\nexport type ViewContext< T = Record<string , any> , States = Record<string , any> > = ViewExecutionContext<T , States> & T;","export {};","import {\n  when,\n  repeat,\n  // ref,\n  children,\n  elements,\n  slotted,\n} from '@microsoft/fast-element';\n\nexport {\n  when,\n  repeat,\n  children,\n  elements,\n  slotted\n}\n\nexport * from './assyncAppend.js';\nexport * from './ref.js';\nexport * from './state.js';\nexport * from './style.js';\nexport * from './until.js';","import { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , html , Binding } from '@microsoft/fast-element';\nimport type { Subscriber , BindingDirective, ExpressionObserver } from '@microsoft/fast-element';\n\nexport class AsyncAppendBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class AsyncAppendDirective<T = any> extends HTMLBindingDirective {\n\n  fn:Promise<T> = null;\n  callback:( result:T ) => ViewTemplate = null;\n\n  constructor( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) {\n    super( new AsyncAppendBindig( (x) => null ) );\n    Object.assign( this , { fn , callback } );\n  }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n\n    return {\n        bind : (source:HTMLView ) => {\n\n          let target = source.targets[targetNodeId];\n\n          this.fn\n          .then(( result ) => {\n            this.callback( result ).render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n          .catch(( error ) => {\n            console.error(error)\n            html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ){\n    return new AsyncAppendDirective( fn , callback);\n  }\n\n}\n\nHTMLDirective.define( AsyncAppendDirective );\n\nexport { Subscriber }\n\nexport const asyncAppend = <T = any>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) => AsyncAppendDirective.use<T>( fn , callback );","import { HTMLDirective, HTMLView, Binding, BindingDirective, ExpressionObserver, Subscriber, StatelessAttachedAttributeDirective } from '@microsoft/fast-element';\n\nexport interface IElementRef< T extends Node >{\n  value : T;\n}\n\nexport function createRef< T extends Node >():IElementRef<T>{\n  return {\n    value : null\n  }\n}\n\nexport class RefDirective<T extends Node> extends StatelessAttachedAttributeDirective<IElementRef<T>> {\n\n  options:IElementRef<T> = null;\n\n  constructor( options:IElementRef<T> ) {\n    super( options );\n    Object.assign( this , { options } )\n  }\n\n  bind(controller: HTMLView): void {\n\n    let { lastChild:target } = controller;\n\n    this.options.value = target as any;\n\n  }\n\n  static use<T extends Node>( options:IElementRef<T> ){\n    return new RefDirective<T>( options );\n  }\n\n}\n\nHTMLDirective.define( RefDirective )\n\nexport const ref = <T extends Node>( options:IElementRef<T> ) => RefDirective.use<T>( options );","// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nimport { State , createState } from '@lithium-framework/state';\nimport { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class StateBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StateDirective<T = any> extends HTMLBindingDirective {\n\n    _state:State<T> = null;\n    get state(){ return this._state.mutator[0] }\n    set state( value:T ){ this._state.mutator[1](value) }\n\n    _callback:( newValue:T ) => ViewTemplate = null;\n\n    constructor( state: State<T> , callback:( newValue:T ) => ViewTemplate ) {\n        super( new StateBindig( (x) => null ) );\n        this._state = state;\n        this._callback = callback;\n    }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n    let view:HTMLView = null;\n\n    return {\n        bind : (source:HTMLView) => {\n\n            let target = source.targets[targetNodeId];\n\n            if(this._callback){\n\n                this._state.subscribe(() => {\n                    view.dispose();\n                    view = this._callback( this.state ).render( source , target.parentElement );\n                });\n\n                view = this._callback( this.state ).render( source , target.parentElement );\n\n            }\n\n            else{\n\n                this._state.subscribe(() => {\n                    if(\"textContent\" in target){\n                        target.textContent = `${this.state}`;\n                    }\n                });\n\n                if(\"textContent\" in target){\n                    target.textContent = `${this.state}`;\n                }\n\n            }\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T = any>( state , callback ){\n    return new StateDirective<T>( state , callback )\n  }\n\n}\n\nHTMLDirective.define( StateDirective )\n\nexport const useState = <T>( state: State<T> , callback?:( newValue:T ) => ViewTemplate ) => StateDirective.use<T>( state , callback );","import { HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\nimport { Properties } from '../utils/css-object';\n\nexport class StyleBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StyleDirective extends HTMLBindingDirective {\n\n  css:Properties = null;\n\n  constructor( css:Properties ) {\n      super( new StyleBindig( (x) => null ) );\n      Object.assign( this , { css } );\n\n  }\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n  let view:HTMLView = null;\n\n  return {\n      bind : (source:HTMLView) => {\n\n        let target = source.targets[targetNodeId];\n        if(target instanceof HTMLElement)Object.assign( target.style , this.css );\n\n      },\n      unbind : () => {\n          // Nettoyage si nécessaire\n      }\n  };\n\n}\n\nstatic use( css:Properties ){\n  return new StyleDirective( css )\n}\n\n}\n\nHTMLDirective.define( StyleDirective );\n\nexport const style = ( css:Properties ) => StyleDirective.use( css );","import { ViewTemplate , html , HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class UntilBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class UntilDirective extends HTMLBindingDirective {\n\n  fn:Promise<ViewTemplate> = null;\n  template:ViewTemplate = null;\n\n  constructor( fn:Promise<ViewTemplate> , template:ViewTemplate ) {\n    super( new UntilBindig( (x) => null ) );\n    Object.assign( this , { fn , template } );\n}\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n\n  return {\n    bind : (source:HTMLView) => {\n\n      let target = source.targets[targetNodeId];\n      let loading = this.template.render( source , target instanceof HTMLElement ? target : target.parentElement );\n\n      this.fn\n      .then(( result ) => {\n        loading.dispose()\n        result.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n      .catch(( error ) => {\n        console.error(error);\n        loading.dispose();\n        html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n\n    },\n    unbind : () => {\n        // Nettoyage si nécessaire\n    }\n};\n\n}\n\nstatic use( fn:Promise<ViewTemplate> , template: ViewTemplate ){\n  return new UntilDirective( fn , template);\n}\n\n}\n\nHTMLDirective.define( UntilDirective );\n\nexport const until = ( fn:Promise<ViewTemplate> , template:ViewTemplate ) => UntilDirective.use( fn , template );","export {\n  // _cssObject,\n  // Properties,\n  // createCSS\n} from './css-object';\n\nexport {\n  createObservableObject,\n} from './observable-object';\n\nexport {\n  ObservableObject,\n  type ObservableProxy,\n  Observable\n} from './observable-object/models';\n\nexport { \n  State,\n  createState\n} from '@lithium-framework/state';\n\nexport { \n  createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator\n} from '@lithium-framework/context';\n\nexport {\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  uuid\n} from '@lithium-framework/huid';\n\n// export{\n//   Observable,\n//   volatile,\n  // State,\n  // createState,\n  // createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator,\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  // uuid\n// }","import { ObservableObject } from './models';\n\nexport function createObservableObject< Key extends string , Value extends any >( initialObject:Record< Key , Value > ){\n  return ObservableObject.init< Key , Value >( initialObject );\n}","export { \n  customElement , \n  css,\n  // html,\n  ViewTemplate,\n  HTMLView,\n  volatile,\n} from \"@microsoft/fast-element\";\n\nimport {\n  html as _html,\n  HTMLTemplateTag\n} from \"@microsoft/fast-element\"\n\nexport const html:HTMLTemplateTag = _html;\n\nexport { \n  WebComponent \n} from './model';","export * from './render';","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ViewExecutionContext } from '../templateComponent/model';\nimport { WebComponent } from '../webComponent';\n\n// Fonction pour observer les enfants ajoutés\nconst observeChilds = (\n  container: HTMLElement,\n  config: MutationObserverInit,\n  callback: (node: Node) => void\n) => {\n  // Crée un MutationObserver\n  const observer = new MutationObserver((mutationsList, observer) => {\n    // Parcourt toutes les mutations détectées\n    mutationsList.forEach(mutation => {\n      if (mutation.type === 'childList') {\n        // Vérifie si des nœuds ont été ajoutés\n        mutation.addedNodes.forEach(node => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            console.log('Nouvel élément ajouté :', node);\n            callback(node);  // Exécute le callback avec le nœud ajouté\n          }\n        });\n      }\n    });\n  });\n\n  // Démarre l'observation\n  observer.observe(container, config);\n\n  // Retourne l'observer pour pouvoir le déconnecter si besoin\n  return observer;\n};\n\nexport function render< T extends Record<string , any> = {} , Storage extends Record<string , any> = Record<string , any> >(template: ViewTemplate<ViewExecutionContext<any, Record<string, any>>, any>, container: HTMLElement = document.body , data = {} ) {\n\n  let context = ViewExecutionContext.init(data);\n\n  let observer = observeChilds( \n    container, \n    {\n      childList: true,  // Observe les ajouts et suppressions d'enfants\n      subtree: false    // Si true, observe tous les descendants du parent\n    },\n    ( node ) => {\n\n      if( node instanceof WebComponent == false ){\n        if(context[\"$effects\"])context[\"$effects\"].execute();\n      }\n\n      observer.disconnect();\n    }\n  );\n\n  let element = template.render( context , container);\n\n  return element;\n\n}"],"names":["Effects","DecoratorAttributeConfiguration","attr","state","attrState","options","target","propertyKey","observable","ViewExecutionContext","WebComponent","value","constructible","constructor","Object","defineProperty","get","set","newValue","enumerable","configurable","$states","ViewTemplate","ObservableObject","ObservableProxy","ViewContext","IEffect","IWebComponent","bindEffect","bindState","bindConsumable","Record","key","States","Value","setter","bind","effect_name","callback","dependencies","data","T","init","$effects","assign","states","effects","Observable","subscribe","unsubscribe","keys","values","initialObject","observabe","createProxy","$data","observers","propKey","oldValue","Set","add","delete","notify","forEach","Proxy","store","result","undefined","error","console","name","Map","execute","effects_without_depedencies","filter","effect","length","effects_with_depedencies","useEffect","dependency","log","self","this","useState","FASTElement","connectedCallback","define","when","repeat","children","elements","slotted","HTMLDirective","HTMLBindingDirective","HTMLView","html","Binding","Subscriber","BindingDirective","ExpressionObserver","AsyncAppendBindig","createObserver","subscriber","directive","controller","AsyncAppendDirective","fn","Promise","x","createBehavior","targetNodeId","source","targets","then","render","HTMLElement","parentElement","catch","unbind","use","asyncAppend","StatelessAttachedAttributeDirective","IElementRef","Node","createRef","RefDirective","lastChild","ref","State","createState","StateBindig","StateDirective","_state","mutator","_callback","view","dispose","textContent","Properties","StyleBindig","StyleDirective","css","style","UntilBindig","UntilDirective","template","loading","until","createObservableObject","createStorage","uuid","Key","customElement","volatile","_html","HTMLTemplateTag","observeChilds","container","config","MutationObserverInit","node","observer","MutationObserver","mutationsList","mutation","type","addedNodes","nodeType","ELEMENT_NODE","observe","document","body","context","childList","subtree","disconnect","element"],"version":3,"file":"module.js.map","sourceRoot":"../"}