{"mappings":"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","sources":["src/index.ts","src/decorators/index.ts","src/decorators/attributeState.ts","src/decorators/state.ts","src/templateComponent/model.ts","src/utils/observable-object/models.ts","src/models/effects.ts","src/controllers/bindEffect.ts","src/controllers/bindState.ts","src/controllers/bindConsumable.ts","src/webComponent/model.ts","src/utils/index.ts","src/utils/observable-object/index.ts","src/utils/observable-array/index.ts","src/decorators/effect.ts","src/templateComponent/index.ts","src/templateComponent/types.ts","src/templateComponent/interfaces.ts","src/directives/index.ts","src/directives/assyncAppend.ts","src/directives/ref.ts","src/directives/state.ts","src/directives/style.ts","src/directives/until.ts","src/webComponent/index.ts","src/functions/index.ts","src/functions/render.ts"],"sourcesContent":["// export * from './dom';\nexport * from './decorators';\nexport * from './directives';\nexport * from './utils';\nexport * from './webComponent';\nexport * from './templateComponent';\n\nexport * from './functions';\n\nexport { Effects } from './models/effects';","export * from './attributeState';\nexport * from './state';\nexport * from './effect';","import { DecoratorAttributeConfiguration, attr } from \"@microsoft/fast-element\";\nimport { state } from './state';\n\n/**\n * @AttributeState decorator\n * A decorator to define a property as both an attribute and a state on a WebComponent.\n * This combines the behavior of @attr and @State decorators.\n * \n * @param {DecoratorAttributeConfiguration} options - Options to configure the attribute.\n * @returns {Function} - The decorator function.\n * \n * @example\n * ```typescript\n * // Define an editable title component using the AttributeState decorator\n * \n * customElement({\n *     name: 'editable-title',\n *     template : html`...`\n * })\n * class EditableTitle extends WebComponent {\n *     AttributeState() level: number = 2;\n *     AttributeState() editable: string = \"false\";\n *     State value: string = \"Hello World\";\n * \n *     handleInput(event) {\n *         this.value = event.target.innerText;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();\n *     }\n * }\n * ```\n */\nexport function attrState( options:DecoratorAttributeConfiguration = {} ){\n\n  return ( target, propertyKey: string ) => {\n    attr( options )( target , propertyKey );\n    state( target , propertyKey );\n  }\n\n}\n\nexport { attr };","import { observable } from \"@microsoft/fast-element\";\nimport { ViewExecutionContext } from \"../templateComponent/model\";\nimport { WebComponent } from \"../webComponent/model\";\nimport { ObservableObject, ObservableProxy } from \"../utils\";\n\n/**\n * @State decorator\n * A decorator to define a state property on a WebComponent.\n * This state property is observable, and its changes are detected and handled.\n * \n * @param {Object} target - The prototype of the class where the state property is defined.\n * @param {string} propertyKey - The name of the property to be defined as a state.\n * \n * @example\n * ```typescript\n * /// Define a counter component using the State decorator\n\n * customElement({\n *     name: 'counter-element',\n *     template: html`...`\n * })\n * class CounterElement extends WebComponent {\n *     State count: number = 0;\n * \n *     increment() {\n *         this.count += 1;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();s\n *     }\n * }\n * ```\n */\n// export function state(target: WebComponent | ViewExecutionContext, propertyKey: string , value:any = null , constructible = false){\n\n//   if(constructible)target.constructor[\"states\"] = target.constructor[\"states\"] || {};\n\n//   if( target instanceof WebComponent ){\n\n//     if('$states' in target == false)(target as any)[\"$states\"] = ObservableObject.init({});\n\n//     console.log({ target })\n\n//     Object.defineProperty( target , propertyKey , {\n//       get(){\n//         return target.states[propertyKey];\n//       },\n//       set(newValue){\n//         target.states[propertyKey] = newValue;\n//         return true;\n//       },\n//       enumerable: true,\n//       configurable: true\n//     } );\n\n//     observable( target.states , propertyKey);\n\n//   }\n\n//   if( target instanceof ViewExecutionContext ){\n\n//     if( propertyKey in target == false ){\n\n//       Object.defineProperty( target , propertyKey , {\n//         get(){\n//           console.log({ target })\n//           return target[\"$states\"][propertyKey];\n//         },\n//         set(newValue){\n//           target[\"$states\"][propertyKey] = newValue;\n//           return true;\n//         },\n//         enumerable: true,\n//         configurable: true\n//       } );\n  \n//       observable( target[\"$states\"] , propertyKey);\n  \n//       if(value && target[propertyKey] == null)target[propertyKey] = value;\n  \n//     }\n\n//   }\n\n// }\n\n\n/**\n * @state decorator\n * Définit une propriété d'état observable sur une instance de WebComponent ou ViewExecutionContext.\n * \n * @param {Object} target - La cible (prototype ou instance) sur laquelle le décorateur est appliqué.\n * @param {string} propertyKey - Le nom de la propriété d'état.\n */\nexport function state(target: WebComponent | ViewExecutionContext, propertyKey: string, value: any = null , x?) {\n\n  const isWebComponent = target instanceof WebComponent;\n  const isViewExecutionContext = target instanceof ViewExecutionContext;\n\n  // Fonction pour initialiser l'état lors de la création de l'instance\n  const initializeState = function ( this: (typeof WebComponent & { $states : ObservableProxy< any , any > }) | (typeof ViewExecutionContext & { $states : ObservableProxy< any , any > }) ) {\n\n    if (!this.$states) {\n      this.$states = ObservableObject.init< any , any >({});\n\n      Object.defineProperty( target , 'states' , {\n        get : () => {\n          return this.$states;\n        }\n      })\n\n    }\n\n    // Initialisation de la propriété d'état dans $states si elle n'existe pas\n    if (!(propertyKey in this.$states)) {\n      this.$states[propertyKey] = value;\n    }\n\n    // Ajouter la propriété observable sur l'instance\n    Object.defineProperty( this , propertyKey, {\n      get: function () {\n        return target[\"states\"][propertyKey];\n      },\n      set: function (newValue) {\n        target[\"states\"][propertyKey] = newValue;\n      },\n      enumerable: true,\n      configurable: true,\n    });\n\n    // Rendre l'état observable\n    observable( isViewExecutionContext ? this.$states : target[\"states\"] , propertyKey);\n  };\n\n  console.log({ target , isWebComponent , isViewExecutionContext })\n\n  // Si le décorateur est appliqué directement sur une instance\n  if (isWebComponent || isViewExecutionContext) {\n\n    initializeState.call(target);\n\n  } else {\n\n    // Si le décorateur est appliqué sur le prototype (classe)\n    const originalConnectedCallback:any = target[\"connectedCallback\"] || function () {};\n\n    (target as any).connectedCallback = function () {\n\n      // Initialise l'état à la création de l'instance\n      initializeState.call(this);\n      // Appelle la méthode originale connectedCallback si elle existe\n      originalConnectedCallback.call(this);\n\n    };\n  }\n  \n}","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ObservableObject, ObservableProxy } from '../utils/observable-object/models';\nimport { state } from '../decorators';\nimport { ViewContext } from './types';\nimport { Effects, IEffect } from '../models/effects';\nimport { IWebComponent } from '../webComponent/interface';\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\nexport class ViewExecutionContext< T = any , States extends Record<string , any> = Record<string , any> > extends Object implements IWebComponent{\n\n  private $states:ObservableProxy< any , any > = ObservableObject.init({});\n  get states():ObservableProxy< any , any >{ return this.$states };\n  private $effects: Effects = new Effects().bind(this);\n  get effects():Effects{ return this.$effects };\n\n  constructor(data?:T ){\n    super();\n\n    Object.assign( this , data );\n\n  }\n\n  get bindState():< Value = never >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name:string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  static init< T extends Record<string , any> = {} >( data?:T ):ViewContext<T>{\n      return new ViewExecutionContext( data ) as any as ViewContext<T>;\n  }\n\n}","import { Observable } from \"@microsoft/fast-element\";\n\nexport type ObservableProxy< key extends string , value extends any = any > = Record<string , value> & { \n  subscribe : ObservableObject< key , value >[\"subscribe\"] , \n  unsubscribe : ObservableObject< key , value >[\"unsubscribe\"],\n  keys():string[];\n  values():any[];\n}\n\nexport class ObservableObject< key extends string , value extends any = any > extends Object{\n\n  static init< key extends string , value extends any >( initialObject:Record<key , value> ){\n    let observabe = new ObservableObject< key , value >( initialObject );\n    return observabe.createProxy();\n  }\n\n  $data:Record<string , value> = {};\n  private observers: Record<string, Set<(newValue: any, oldValue: any) => void>> = {};\n\n  constructor( initialObject:Record<key , value> ){\n    super();\n    Object.assign( this.$data , initialObject );\n  };\n\n  // Enregistre un observateur pour une propriété spécifique\n  subscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (!this.observers[propKey]) {\n      this.observers[propKey] = new Set();\n    }\n    this.observers[propKey].add(callback);\n  }\n\n  // Supprime un observateur pour une propriété spécifique\n  unsubscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (this.observers[propKey]) {\n      this.observers[propKey].delete(callback);\n    }\n  }\n\n  // Méthode appelée pour notifier les observateurs d'un changement de valeur\n  private notify(propKey: string, newValue: any, oldValue: any) {\n    if (this.observers[propKey]) {\n      this.observers[propKey].forEach(callback => callback(newValue, oldValue));\n    }\n  }\n\n  set = <T extends value = any>( key:key , value:T ) => {   \n\n    const oldValue = this.$data[`_${key}`];\n\n    this.$data[`_${key}`] = value as any;\n    Observable.defineProperty( this.$data, key);\n    this.notify(key, value, oldValue);\n    return this.$data[key];\n\n  }\n\n  createProxy():ObservableProxy< key , value > {\n\n    return new Proxy( this.$data , {\n      get : ( store , propKey:string ) => {\n\n        let result:any = undefined;\n\n        if( propKey == \"subscribe\" )return this.subscribe;\n        else if( propKey == \"unsubscribe\" )return this.unsubscribe;\n        else if( propKey == \"keys\" )return () => Object.keys( this.$data );\n        else if( propKey == \"values\" )return () => Object.values( this.$data );\n\n        try{\n          result = store[propKey];\n        }\n        catch(error){\n          console.error(error);\n        }\n        finally{\n          return result;\n        }\n\n      },\n      set : ( store , propKey: string, value: any ) => {\n        const oldValue = store[propKey];\n\n        if(store[propKey]){\n          store[propKey] = value;\n        }\n        else {\n          store[ `_${propKey}` ] = value;\n          Observable.defineProperty( store, propKey);\n        }\n\n        this.notify(propKey, value, oldValue);\n\n        return true;\n  \n      }\n    }) as ObservableProxy< key , value >;\n\n  }\n\n}\n\nexport { Observable };","import { WebComponent } from \"../webComponent\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { IWebComponent } from \"src/webComponent/interface\";\n\nexport interface IEffect{\n  name:string;\n  dependencies : string[];\n  callback:any;\n}\n\nexport class Effects extends Map< string , IEffect >{\n\n  private target:IWebComponent = null;\n\n  bind( target ){\n    this.target = target;\n    return this;\n  }\n\n  execute(){\n\n    let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n    let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n\n    effects_with_depedencies.forEach(( effect ) => {\n\n      let { dependencies , callback:useEffect , name } = effect;\n\n      dependencies.forEach(( dependency ) => {\n\n        this.target.states.subscribe( dependency , useEffect );\n\n      })\n\n    })\n\n    effects_without_depedencies.forEach(( effect ) => {\n\n      console.log({ effect })\n\n      let { callback:useEffect } = effect;\n      useEffect();\n\n    })\n\n    this.forEach( effect => {\n      \n      let { dependencies , callback:useEffect } = effect;\n      if(!dependencies)dependencies = [];\n\n      if(dependencies.length > 0){\n\n        dependencies.forEach(( dependency ) => {\n          this.target.states.subscribe( dependency , useEffect )\n        })\n\n      }\n      else useEffect();\n\n    });\n\n  }\n\n  constructor( effects?:Record< string , IEffect > ){\n    super();\n\n    if(effects)Object.values(effects).forEach((effect) => {\n      console.log({ effect })\n      this.set( effect.name , effect )\n    });\n\n    console.log({ self : this , effects , values : Object.values({...effects}) , keys : Object.keys({...effects}) });\n\n  }\n\n}","import { WebComponent } from \"../webComponent\";\nimport { IEffect } from \"../models/effects\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { effect } from \"../decorators\";\n\nexport function bindEffect( this:WebComponent | ViewExecutionContext , effect_name:string , callback : () => void , dependencies : any[] ){\n\n  effect( dependencies )( this , effect_name , callback );\n\n}","import { ObservableObject } from \"../utils\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { WebComponent } from \"../webComponent\";\nimport { state } from \"../decorators\";\n\nexport function bindState< States , Value >( this:WebComponent | ViewExecutionContext , key:keyof States , value:Value ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n  function useState( this:ViewExecutionContext , key:keyof States ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n    return [ this[key as string] , ( newValue ) => {\n      this[key as string] = newValue;\n    } ]\n\n  }\n\n  state( this , key as string , value );\n  return useState.bind( this )( key );\n\n}","import { WebComponent } from \"src/webComponent\";\nimport { state } from \"../decorators\";\nimport { ViewExecutionContext } from \"src/templateComponent\";\n\nexport function bindConsumable<Value = any>( this:WebComponent | ViewExecutionContext , key:string , value:Value ){\n  state( this , key , value , false );\n}","import { FASTElement } from \"@microsoft/fast-element\";\nimport { ObservableObject, ObservableProxy } from '../utils/observable-object/models';\nimport { IWebComponent } from \"./interface\";\nimport { Effects } from \"../models/effects\";\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\n/* The WebComponent class extends FASTElement and provides state management functionality using\nObservableObject. */\nexport class WebComponent extends FASTElement implements IWebComponent{\n\n  /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n  instance property named `` on the `WebComponent` class. This property is being set to the\n  result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n  values defined in the `states` static property of the `WebComponent` class\n  (`this.constructor[\"states\"]`). */\n  $states:ObservableProxy< any , any >;\n  $effects: Effects;\n\n  constructor(){\n    super();\n\n    // Initialisation de $states dans le constructeur pour chaque instance\n    // this.$states = ObservableObject.init({});\n\n    // Initialisation des effets dans le constructeur pour chaque instance\n    // this.$effects = new Effects().bind(this);\n  }\n\n  get bindState():< States , Value >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name : string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  connectedCallback() {\n    (this as IWebComponent).effects?.execute();\n    super.connectedCallback();\n  }\n\n  static define = FASTElement.define\n  \n}","export {\n  // _cssObject,\n  // Properties,\n  // createCSS\n} from './css-object';\n\nexport {\n  createObservableObject,\n} from './observable-object';\n\nexport {\n  ObservableArray,\n} from './observable-array';\n\nexport {\n  ObservableObject,\n  type ObservableProxy,\n  Observable\n} from './observable-object/models';\n\nexport { \n  State,\n  createState\n} from '@lithium-framework/state';\n\nexport { \n  createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator\n} from '@lithium-framework/context';\n\nexport {\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  uuid\n} from '@lithium-framework/huid';\n\n// export{\n//   Observable,\n//   volatile,\n  // State,\n  // createState,\n  // createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator,\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  // uuid\n// }","import { ObservableObject } from './models';\n\nexport function createObservableObject< Key extends string , Value extends any >( initialObject:Record< Key , Value > ){\n  return ObservableObject.init< Key , Value >( initialObject );\n}","export function ObservableArray(init: Array<any> = []) {\n\n  const observers = new Set<(operation: string, args: any, result: any) => void>();\n\n  const notifyObservers = (operation: string, args: any, result: any) => {\n    observers.forEach(callback => callback(operation, args, result));\n  };\n\n  const arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'reverse'];\n\n  return new Proxy(init, {\n    get(target, property, receiver) {\n      // Si on accède à une méthode de tableau, la redéfinir pour inclure la notification\n      if (arrayMethods.includes(property as string)) {\n        return (...args: any[]) => {\n          const result = Array.prototype[property].apply(target, args);\n          // Notifier les observateurs du changement\n          notifyObservers(property as string, args, result);\n          return result;\n        };\n      }\n\n      return Reflect.get(target, property, receiver);\n    },\n\n    set(target, property, value, receiver) {\n      const oldValue = target[property];\n      const result = Reflect.set(target, property, value, receiver);\n\n      if (oldValue !== value) {\n        notifyObservers('set', { index: property, value }, result);\n      }\n\n      return result;\n    },\n  });\n}\n\nObservableArray.prototype.subscribe = function (callback: (operation: string, args: any, result: any) => void) {\n  this.observers.add(callback);\n};\n\nObservableArray.prototype.unsubscribe = function (callback: (operation: string, args: any, result: any) => void) {\n  this.observers.delete(callback);\n};\n","import { ObservableObject } from \"src/utils\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { WebComponent } from \"../webComponent/model\";\nimport { Effects } from \"../models/effects\";\nimport { IWebComponent } from \"src/webComponent/interface\";\n\nexport function effect( dependencies:any[] ){\n\n  return ( target:IWebComponent , propertyKey: string , value = null ) => {\n\n    if( target instanceof WebComponent ){\n\n      if('$effects' in target == false)(target as any).$effects = new Effects().bind( target );\n\n      Object.defineProperty( target , propertyKey , {\n        get(){\n          return target.$effects?.get( propertyKey );\n        },\n        set(newValue){\n\n          target.$effects.set( propertyKey , {\n            name : propertyKey,\n            dependencies : dependencies as any,\n            callback : newValue\n          });\n          \n          return true;\n        },\n        enumerable: true,\n        configurable: true\n      });\n\n    }\n\n    if( target instanceof ViewExecutionContext ){\n\n      if('$effects' in target == false)(target as any).$effects = new Effects().bind( target );\n\n      if(!target[propertyKey])Object.defineProperty( target , propertyKey , {\n        get(){\n          return target.effects.get( propertyKey );\n        },\n        set(newValue){\n  \n          target.effects.set( propertyKey , {\n            name : propertyKey,\n            dependencies : dependencies as any,\n            callback : newValue\n          });\n  \n          return true;\n        },\n        enumerable: true,\n        configurable: true\n      });\n  \n      if( value )target[ propertyKey ] = value;\n\n    }\n  \n  }\n\n}","export * from './model';\nexport * from './types';\nexport * from './interfaces';","import { ViewExecutionContext } from \"./model\";\n\nexport type ViewContext< T = Record<string , any> , States = Record<string , any> > = ViewExecutionContext<T , States> & T;","export {};","import {\n  when,\n  repeat,\n  // ref,\n  children,\n  elements,\n  slotted,\n} from '@microsoft/fast-element';\n\nexport {\n  when,\n  repeat,\n  children,\n  elements,\n  slotted\n}\n\nexport * from './assyncAppend.js';\nexport * from './ref.js';\nexport * from './state.js';\nexport * from './style.js';\nexport * from './until.js';","import { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , html , Binding } from '@microsoft/fast-element';\nimport type { Subscriber , BindingDirective, ExpressionObserver } from '@microsoft/fast-element';\n\nexport class AsyncAppendBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class AsyncAppendDirective<T = any> extends HTMLBindingDirective {\n\n  fn:Promise<T> = null;\n  callback:( result:T ) => ViewTemplate = null;\n\n  constructor( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) {\n    super( new AsyncAppendBindig( (x) => null ) );\n    Object.assign( this , { fn , callback } );\n  }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n\n    return {\n        bind : (source:HTMLView ) => {\n\n          let target = source.targets[targetNodeId];\n\n          this.fn\n          .then(( result ) => {\n            this.callback( result ).render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n          .catch(( error ) => {\n            console.error(error)\n            html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ){\n    return new AsyncAppendDirective( fn , callback);\n  }\n\n}\n\nHTMLDirective.define( AsyncAppendDirective );\n\nexport { Subscriber }\n\nexport const asyncAppend = <T = any>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) => AsyncAppendDirective.use<T>( fn , callback );","import { HTMLDirective, HTMLView, Binding, BindingDirective, ExpressionObserver, Subscriber, StatelessAttachedAttributeDirective } from '@microsoft/fast-element';\n\nexport interface IElementRef< T extends Node >{\n  value : T;\n}\n\nexport function createRef< T extends Node >():IElementRef<T>{\n  return {\n    value : null\n  }\n}\n\nexport class RefDirective<T extends Node> extends StatelessAttachedAttributeDirective<IElementRef<T>> {\n\n  options:IElementRef<T> = null;\n\n  constructor( options:IElementRef<T> ) {\n    super( options );\n    Object.assign( this , { options } )\n  }\n\n  bind(controller: HTMLView): void {\n\n    let { lastChild:target } = controller;\n\n    this.options.value = target as any;\n\n  }\n\n  static use<T extends Node>( options:IElementRef<T> ){\n    return new RefDirective<T>( options );\n  }\n\n}\n\nHTMLDirective.define( RefDirective )\n\nexport const ref = <T extends Node>( options:IElementRef<T> ) => RefDirective.use<T>( options );","// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nimport { State , createState } from '@lithium-framework/state';\nimport { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class StateBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StateDirective<T = any> extends HTMLBindingDirective {\n\n    _state:State<T> = null;\n    get state(){ return this._state.mutator[0] }\n    set state( value:T ){ this._state.mutator[1](value) }\n\n    _callback:( newValue:T ) => ViewTemplate = null;\n\n    constructor( state: State<T> , callback:( newValue:T ) => ViewTemplate ) {\n        super( new StateBindig( (x) => null ) );\n        this._state = state;\n        this._callback = callback;\n    }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n    let view:HTMLView = null;\n\n    return {\n        bind : (source:HTMLView) => {\n\n            let target = source.targets[targetNodeId];\n\n            if(this._callback){\n\n                this._state.subscribe(() => {\n                    view.dispose();\n                    view = this._callback( this.state ).render( source , target.parentElement );\n                });\n\n                view = this._callback( this.state ).render( source , target.parentElement );\n\n            }\n\n            else{\n\n                this._state.subscribe(() => {\n                    if(\"textContent\" in target){\n                        target.textContent = `${this.state}`;\n                    }\n                });\n\n                if(\"textContent\" in target){\n                    target.textContent = `${this.state}`;\n                }\n\n            }\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T = any>( state , callback ){\n    return new StateDirective<T>( state , callback )\n  }\n\n}\n\nHTMLDirective.define( StateDirective )\n\nexport const useState = <T>( state: State<T> , callback?:( newValue:T ) => ViewTemplate ) => StateDirective.use<T>( state , callback );","import { HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\nimport { Properties } from '../utils/css-object';\n\nexport class StyleBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StyleDirective extends HTMLBindingDirective {\n\n  css:Properties = null;\n\n  constructor( css:Properties ) {\n      super( new StyleBindig( (x) => null ) );\n      Object.assign( this , { css } );\n\n  }\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n  let view:HTMLView = null;\n\n  return {\n      bind : (source:HTMLView) => {\n\n        let target = source.targets[targetNodeId];\n        if(target instanceof HTMLElement)Object.assign( target.style , this.css );\n\n      },\n      unbind : () => {\n          // Nettoyage si nécessaire\n      }\n  };\n\n}\n\nstatic use( css:Properties ){\n  return new StyleDirective( css )\n}\n\n}\n\nHTMLDirective.define( StyleDirective );\n\nexport const style = ( css:Properties ) => StyleDirective.use( css );","import { ViewTemplate , html , HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class UntilBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class UntilDirective extends HTMLBindingDirective {\n\n  fn:Promise<ViewTemplate> = null;\n  template:ViewTemplate = null;\n\n  constructor( fn:Promise<ViewTemplate> , template:ViewTemplate ) {\n    super( new UntilBindig( (x) => null ) );\n    Object.assign( this , { fn , template } );\n}\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n\n  return {\n    bind : (source:HTMLView) => {\n\n      let target = source.targets[targetNodeId];\n      let loading = this.template.render( source , target instanceof HTMLElement ? target : target.parentElement );\n\n      this.fn\n      .then(( result ) => {\n        loading.dispose()\n        result.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n      .catch(( error ) => {\n        console.error(error);\n        loading.dispose();\n        html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n\n    },\n    unbind : () => {\n        // Nettoyage si nécessaire\n    }\n};\n\n}\n\nstatic use( fn:Promise<ViewTemplate> , template: ViewTemplate ){\n  return new UntilDirective( fn , template);\n}\n\n}\n\nHTMLDirective.define( UntilDirective );\n\nexport const until = ( fn:Promise<ViewTemplate> , template:ViewTemplate ) => UntilDirective.use( fn , template );","export { \n  customElement , \n  css,\n  // html,\n  ViewTemplate,\n  HTMLView,\n  volatile,\n} from \"@microsoft/fast-element\";\n\nimport {\n  html as _html,\n  HTMLTemplateTag\n} from \"@microsoft/fast-element\"\n\nexport const html:HTMLTemplateTag = _html;\n\nexport { \n  WebComponent \n} from './model';","export * from './render';","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ViewExecutionContext } from '../templateComponent/model';\nimport { WebComponent } from '../webComponent';\n\n// Fonction pour observer les enfants ajoutés\nconst observeChilds = (\n  container: HTMLElement,\n  config: MutationObserverInit,\n  callback: (node: Node) => void\n) => {\n  // Crée un MutationObserver\n  const observer = new MutationObserver((mutationsList, observer) => {\n    // Parcourt toutes les mutations détectées\n    mutationsList.forEach(mutation => {\n      if (mutation.type === 'childList') {\n        // Vérifie si des nœuds ont été ajoutés\n        mutation.addedNodes.forEach(node => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            console.log('Nouvel élément ajouté :', node);\n            callback(node);  // Exécute le callback avec le nœud ajouté\n          }\n        });\n      }\n    });\n  });\n\n  // Démarre l'observation\n  observer.observe(container, config);\n\n  // Retourne l'observer pour pouvoir le déconnecter si besoin\n  return observer;\n};\n\nexport function render< T extends Record<string , any> = {} , Storage extends Record<string , any> = Record<string , any> >(template: ViewTemplate<ViewExecutionContext<any, Record<string, any>>, any>, container: HTMLElement = document.body , data = {} ) {\n\n  let context = ViewExecutionContext.init(data);\n\n  let observer = observeChilds( \n    container, \n    {\n      childList: true,  // Observe les ajouts et suppressions d'enfants\n      subtree: false    // Si true, observe tous les descendants du parent\n    },\n    ( node ) => {\n\n      if( node instanceof WebComponent == false ){\n        if(context[\"effects\"])context[\"effects\"].execute();\n      }\n\n      observer.disconnect();\n    }\n  );\n\n  let element = template.render( context , container);\n\n  return element;\n\n}"],"names":["Effects","DecoratorAttributeConfiguration","attr","state","attrState","options","target","propertyKey","observable","ViewExecutionContext","WebComponent","ObservableObject","ObservableProxy","value","x","isWebComponent","isViewExecutionContext","initializeState","this","$states","init","Object","defineProperty","get","set","newValue","enumerable","configurable","console","log","call","originalConnectedCallback","connectedCallback","ViewTemplate","ViewContext","IEffect","IWebComponent","bindEffect","bindState","bindConsumable","Record","states","effects","$effects","constructor","data","T","bind","assign","key","States","Value","setter","effect_name","callback","dependencies","Observable","subscribe","unsubscribe","keys","values","initialObject","observabe","createProxy","$data","observers","propKey","oldValue","Set","add","delete","notify","forEach","Proxy","store","result","undefined","error","name","Map","execute","effects_without_depedencies","filter","effect","length","effects_with_depedencies","useEffect","dependency","self","useState","FASTElement","define","createObservableObject","ObservableArray","State","createState","createStorage","uuid","Key","Array","operation","args","notifyObservers","arrayMethods","property","receiver","includes","prototype","apply","Reflect","index","when","repeat","children","elements","slotted","HTMLDirective","HTMLBindingDirective","HTMLView","html","Binding","Subscriber","BindingDirective","ExpressionObserver","AsyncAppendBindig","createObserver","subscriber","directive","controller","AsyncAppendDirective","fn","Promise","createBehavior","targetNodeId","source","targets","then","render","HTMLElement","parentElement","catch","unbind","use","asyncAppend","StatelessAttachedAttributeDirective","IElementRef","Node","createRef","RefDirective","lastChild","ref","StateBindig","StateDirective","_state","mutator","_callback","view","dispose","textContent","Properties","StyleBindig","StyleDirective","css","style","UntilBindig","UntilDirective","template","loading","until","customElement","volatile","_html","HTMLTemplateTag","observeChilds","container","config","MutationObserverInit","node","observer","MutationObserver","mutationsList","mutation","type","addedNodes","nodeType","ELEMENT_NODE","observe","document","body","context","childList","subtree","disconnect","element"],"version":3,"file":"module.js.map","sourceRoot":"../"}