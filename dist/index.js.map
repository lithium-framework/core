{"mappings":"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","sources":["src/index.ts","src/decorators/index.ts","src/decorators/attributeState.ts","src/decorators/state.ts","src/templateComponent/model.ts","src/utils/observable-object/models.ts","src/models/effects.ts","src/controllers/bindEffect.ts","src/controllers/bindState.ts","src/controllers/bindConsumable.ts","src/webComponent/model.ts","src/utils/index.ts","src/utils/observable-object/index.ts","src/utils/observable-array/index.ts","src/decorators/effect.ts","src/templateComponent/index.ts","src/templateComponent/types.ts","src/templateComponent/interfaces.ts","src/directives/index.ts","src/directives/assyncAppend.ts","src/directives/ref.ts","src/directives/state.ts","src/directives/style.ts","src/directives/until.ts","src/webComponent/index.ts","src/functions/index.ts","src/functions/render.ts"],"sourcesContent":["// export * from './dom';\nexport * from './decorators';\nexport * from './directives';\nexport * from './utils';\nexport * from './webComponent';\nexport * from './templateComponent';\n\nexport * from './functions';\n\nexport { Effects } from './models/effects';","export * from './attributeState';\nexport * from './state';\nexport * from './effect';","import { DecoratorAttributeConfiguration, attr } from \"@microsoft/fast-element\";\nimport { state } from './state';\n\n/**\n * @AttributeState decorator\n * A decorator to define a property as both an attribute and a state on a WebComponent.\n * This combines the behavior of @attr and @State decorators.\n * \n * @param {DecoratorAttributeConfiguration} options - Options to configure the attribute.\n * @returns {Function} - The decorator function.\n * \n * @example\n * ```typescript\n * // Define an editable title component using the AttributeState decorator\n * \n * customElement({\n *     name: 'editable-title',\n *     template : html`...`\n * })\n * class EditableTitle extends WebComponent {\n *     AttributeState() level: number = 2;\n *     AttributeState() editable: string = \"false\";\n *     State value: string = \"Hello World\";\n * \n *     handleInput(event) {\n *         this.value = event.target.innerText;\n *     }\n * \n *     connectedCallback() {\n *         super.connectedCallback();\n *     }\n * }\n * ```\n */\nexport function attrState( options:DecoratorAttributeConfiguration = {} ){\n\n  return ( target, propertyKey: string ) => {\n    attr( options )( target , propertyKey );\n    state( target , propertyKey );\n  }\n\n}\n\nexport { attr };","import { observable } from \"@microsoft/fast-element\";\nimport { ViewExecutionContext } from \"../templateComponent/model\";\nimport { WebComponent } from \"../webComponent/model\";\nimport { ObservableObject, ObservableProxy } from \"../utils\";\n\ntype _WebComponent = (typeof WebComponent & { $states : ObservableProxy< any , any > });\ntype _ViewExecutionContext = (typeof ViewExecutionContext & { $states : ObservableProxy< any , any > });\n\n/** \n * This est l'instance ( dernier layer du WebComponent , donc le WebComponentCustom )\n * Target est le layer WebComponent ( proto du WebComponentCustom extends WebComponent ) \n*/\nconst initializeState = function ( this: _WebComponent | _ViewExecutionContext , target:_WebComponent | _ViewExecutionContext , propertyKey:string , value:any ) {\n\n  if (!this.$states) {\n    this.$states = ObservableObject.init< any , any >({});\n\n    Object.defineProperty( target , 'states' , {\n      get : () => {\n        return this.$states;\n      }\n    })\n\n  }\n\n  // Initialisation de la propriété d'état dans $states si elle n'existe pas\n  if (!(propertyKey in this.$states)) {\n    this.$states[propertyKey] = value;\n  }\n\n  // Ajouter la propriété observable sur l'instance\n  Object.defineProperty( this , propertyKey, {\n    get: function () {\n      return target[\"states\"][propertyKey];\n    },\n    set: function (newValue) {\n      target[\"states\"][propertyKey] = newValue;\n    },\n    enumerable: true,\n    configurable: true,\n  });\n\n  // Rendre l'état observable\n  observable( target[\"states\"] , propertyKey);\n};\n\n/**\n * @state decorator\n * Définit une propriété d'état observable sur une instance de WebComponent ou ViewExecutionContext.\n * \n * @param {Object} target - La cible (prototype ou instance) sur laquelle le décorateur est appliqué.\n * @param {string} propertyKey - Le nom de la propriété d'état.\n * \n */\nexport function state(target: _WebComponent | _ViewExecutionContext, propertyKey: string, value: any = null , x?) {\n\n  const isWebComponent = target instanceof WebComponent;\n  const isViewExecutionContext = target instanceof ViewExecutionContext;\n\n  // Fonction pour initialiser l'état lors de la création de l'instance\n  // const initializeState = function ( this: (typeof WebComponent & { $states : ObservableProxy< any , any > }) | (typeof ViewExecutionContext & { $states : ObservableProxy< any , any > }) ) {\n\n  //   if (!this.$states) {\n  //     this.$states = ObservableObject.init< any , any >({});\n\n  //     Object.defineProperty( target , 'states' , {\n  //       get : () => {\n  //         return this.$states;\n  //       }\n  //     })\n\n  //   }\n\n  //   // Initialisation de la propriété d'état dans $states si elle n'existe pas\n  //   if (!(propertyKey in this.$states)) {\n  //     this.$states[propertyKey] = value;\n  //   }\n\n  //   // Ajouter la propriété observable sur l'instance\n  //   Object.defineProperty( this , propertyKey, {\n  //     get: function () {\n  //       return target[\"states\"][propertyKey];\n  //     },\n  //     set: function (newValue) {\n  //       target[\"states\"][propertyKey] = newValue;\n  //     },\n  //     enumerable: true,\n  //     configurable: true,\n  //   });\n\n  //   // Rendre l'état observable\n  //   observable( target[\"states\"] , propertyKey);\n  // };\n\n  // Si le décorateur est appliqué directement sur une instance\n  if (isWebComponent || isViewExecutionContext) {\n\n    initializeState.call( target , target , propertyKey , value );\n\n  } else {\n\n    // Si le décorateur est appliqué sur le prototype (classe)\n    const originalConnectedCallback:any = target[\"connectedCallback\"] || function () {};\n\n    (target as any).connectedCallback = function () {\n\n      // Initialise l'état à la création de l'instance\n      initializeState.call(this , target , propertyKey , value);\n      // Appelle la méthode originale connectedCallback si elle existe\n      originalConnectedCallback.call(this);\n\n    };\n  }\n  \n}","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ObservableObject, ObservableProxy } from '../utils/observable-object/models';\nimport { state } from '../decorators';\nimport { ViewContext } from './types';\nimport { Effects, IEffect } from '../models/effects';\nimport { IWebComponent } from '../webComponent/interface';\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\nexport class ViewExecutionContext< T = any , States extends Record<string , any> = Record<string , any> > extends Object implements IWebComponent{\n\n  private $states:ObservableProxy< any , any > = ObservableObject.init({});\n  get states():ObservableProxy< any , any >{ return this.$states };\n  private $effects: Effects = new Effects().bind(this);\n  get effects():Effects{ return this.$effects };\n\n  constructor(data?:T ){\n    super();\n\n    Object.assign( this , data );\n\n  }\n\n  get bindState():< Value = never >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name:string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  static init< T extends Record<string , any> = {} >( data?:T ):ViewContext<T>{\n      return new ViewExecutionContext( data ) as any as ViewContext<T>;\n  }\n\n}","import { Observable } from \"@microsoft/fast-element\";\n\nexport type ObservableProxy< key extends string , value extends any = any > = Record<string , value> & { \n  subscribe : ObservableObject< key , value >[\"subscribe\"] , \n  unsubscribe : ObservableObject< key , value >[\"unsubscribe\"],\n  keys():string[];\n  values():any[];\n}\n\nexport class ObservableObject< key extends string , value extends any = any > extends Object{\n\n  static init< key extends string , value extends any >( initialObject:Record<key , value> ){\n    let observabe = new ObservableObject< key , value >( initialObject );\n    return observabe.createProxy();\n  }\n\n  $data:Record<string , value> = {};\n  private observers: Record<string, Set<(newValue: any, oldValue: any) => void>> = {};\n\n  constructor( initialObject:Record<key , value> ){\n    super();\n    Object.assign( this.$data , initialObject );\n  };\n\n  // Enregistre un observateur pour une propriété spécifique\n  subscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (!this.observers[propKey]) {\n      this.observers[propKey] = new Set();\n    }\n    this.observers[propKey].add(callback);\n  }\n\n  // Supprime un observateur pour une propriété spécifique\n  unsubscribe = (propKey: key, callback: (newValue: any, oldValue: any) => void) => {\n    if (this.observers[propKey]) {\n      this.observers[propKey].delete(callback);\n    }\n  }\n\n  // Méthode appelée pour notifier les observateurs d'un changement de valeur\n  private notify(propKey: string, newValue: any, oldValue: any) {\n    if (this.observers[propKey]) {\n      this.observers[propKey].forEach(callback => callback(newValue, oldValue));\n    }\n  }\n\n  set = <T extends value = any>( key:key , value:T ) => {   \n\n    const oldValue = this.$data[`_${key}`];\n\n    this.$data[`_${key}`] = value as any;\n    Observable.defineProperty( this.$data, key);\n    this.notify(key, value, oldValue);\n    return this.$data[key];\n\n  }\n\n  createProxy():ObservableProxy< key , value > {\n\n    return new Proxy( this.$data , {\n      get : ( store , propKey:string ) => {\n\n        let result:any = undefined;\n\n        if( propKey == \"subscribe\" )return this.subscribe;\n        else if( propKey == \"unsubscribe\" )return this.unsubscribe;\n        else if( propKey == \"keys\" )return () => Object.keys( this.$data );\n        else if( propKey == \"values\" )return () => Object.values( this.$data );\n\n        try{\n          result = store[propKey];\n        }\n        catch(error){\n          console.error(error);\n        }\n        finally{\n          return result;\n        }\n\n      },\n      set : ( store , propKey: string, value: any ) => {\n        const oldValue = store[propKey];\n\n        if(store[propKey]){\n          store[propKey] = value;\n        }\n        else {\n          store[ `_${propKey}` ] = value;\n          Observable.defineProperty( store, propKey);\n        }\n\n        this.notify(propKey, value, oldValue);\n\n        return true;\n  \n      }\n    }) as ObservableProxy< key , value >;\n\n  }\n\n}\n\nexport { Observable };","import { WebComponent } from \"../webComponent\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { IWebComponent } from \"src/webComponent/interface\";\n\nexport interface IEffect{\n  name:string;\n  dependencies : string[];\n  callback:any;\n}\n\nexport class Effects extends Map< string , IEffect >{\n\n  private target:IWebComponent = null;\n\n  bind( target ){\n    this.target = target;\n    return this;\n  }\n\n  execute(){\n\n    let effects_without_depedencies = [...this.values()].filter(( effect ) => !effect.dependencies || effect.dependencies.length == 0 ? effect : null);\n    let effects_with_depedencies = [...this.values()].filter(( effect ) => effect.dependencies && effect.dependencies.length > 0 ? effect : null);\n\n    effects_with_depedencies.forEach(( effect ) => {\n\n      let { dependencies , callback:useEffect , name } = effect;\n\n      dependencies.forEach(( dependency ) => {\n\n        this.target.states.subscribe( dependency , useEffect );\n\n      })\n\n    })\n\n    effects_without_depedencies.forEach(( effect ) => {\n\n      let { callback:useEffect } = effect;\n      useEffect();\n\n    })\n\n  }\n\n  constructor( effects?:Record< string , IEffect > ){\n    super();\n\n    if(effects)Object.values(effects).forEach((effect) => {\n      console.log({ effect })\n      this.set( effect.name , effect )\n    });\n\n  }\n\n}","import { WebComponent } from \"../webComponent\";\nimport { IEffect } from \"../models/effects\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { effect } from \"../decorators\";\n\nexport function bindEffect( this:WebComponent | ViewExecutionContext , effect_name:string , callback : () => void , dependencies : any[] ){\n\n  effect( dependencies )( this , effect_name , callback );\n\n}","import { ObservableObject, ObservableProxy } from \"../utils\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { WebComponent } from \"../webComponent\";\nimport { state } from \"../decorators\";\n\ntype _WebComponent = (typeof WebComponent & { $states : ObservableProxy< any , any > });\ntype _ViewExecutionContext = (typeof ViewExecutionContext & { $states : ObservableProxy< any , any > });\n\nexport function bindState< States , Value >( this:_WebComponent | _ViewExecutionContext , key:keyof States , value:Value ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n  function useState( this:ViewExecutionContext , key:keyof States ):[ state:Value , setter:( newValue:Value ) => void ]{\n\n    return [ this[key as string] , ( newValue ) => {\n      this[key as string] = newValue;\n    } ]\n\n  }\n\n  state( this , key as string , value );\n  return useState.bind( this )( key );\n\n}","import { WebComponent } from \"src/webComponent\";\nimport { state } from \"../decorators\";\nimport { ViewExecutionContext } from \"src/templateComponent\";\nimport { ObservableProxy } from \"../utils\";\n\ntype _WebComponent = (typeof WebComponent & { $states : ObservableProxy< any , any > });\ntype _ViewExecutionContext = (typeof ViewExecutionContext & { $states : ObservableProxy< any , any > });\n\nexport function bindConsumable<Value = any>( this:_WebComponent | _ViewExecutionContext , key:string , value:Value ){\n  state( this , key , value , false );\n}","import { FASTElement } from \"@microsoft/fast-element\";\nimport { ObservableObject, ObservableProxy } from '../utils/observable-object/models';\nimport { IWebComponent } from \"./interface\";\nimport { Effects } from \"../models/effects\";\n\nimport { bindEffect } from '../controllers/bindEffect';\nimport { bindState } from '../controllers/bindState';\nimport { bindConsumable } from '../controllers/bindConsumable';\n\n/* The WebComponent class extends FASTElement and provides state management functionality using\nObservableObject. */\nexport class WebComponent extends FASTElement implements IWebComponent{\n\n  /* The line ` = ObservableObject.init( this.constructor[\"states\"] );` is initializing an\n  instance property named `` on the `WebComponent` class. This property is being set to the\n  result of calling the `init` method of the `ObservableObject` class, passing in the initial state\n  values defined in the `states` static property of the `WebComponent` class\n  (`this.constructor[\"states\"]`). */\n  // $states:ObservableProxy< any , any >;\n  // $effects: Effects;\n\n  constructor(){\n    super();\n  }\n\n  get bindState():< States , Value >(key: keyof States, value: Value) => [state: Value, setter: (newValue: Value) => void]{ return bindState.bind(this) }\n  get bindConsumable():< Value >(key: string, value: Value) => void{ return bindConsumable.bind(this) }\n  get bindEffect():( effect_name : string , callback: () => void, dependencies: any[])=> void{ return bindEffect.bind( this ) }\n\n  connectedCallback( this:IWebComponent ) {\n    this.effects?.execute();\n    super.connectedCallback();\n  }\n\n  static define = FASTElement.define\n  \n}","export {\n  // _cssObject,\n  // Properties,\n  // createCSS\n} from './css-object';\n\nexport {\n  createObservableObject,\n} from './observable-object';\n\nexport {\n  ObservableArray,\n} from './observable-array';\n\nexport {\n  ObservableObject,\n  type ObservableProxy,\n  Observable\n} from './observable-object/models';\n\nexport { \n  State,\n  createState\n} from '@lithium-framework/state';\n\nexport { \n  createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator\n} from '@lithium-framework/context';\n\nexport {\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  uuid\n} from '@lithium-framework/huid';\n\n// export{\n//   Observable,\n//   volatile,\n  // State,\n  // createState,\n  // createStorage,\n  // Storage, \n  // StorageKeys, \n  // StorageValues, \n  // StateValidator,\n  // ComponentId,\n  // Segment,\n  // ParentSegementId,\n  // CollectionId,\n  // HUID,\n  // HierarchicalUUIDOptions,\n  // uuid\n// }","import { ObservableObject } from './models';\n\nexport function createObservableObject< Key extends string , Value extends any >( initialObject:Record< Key , Value > ){\n  return ObservableObject.init< Key , Value >( initialObject );\n}","export function ObservableArray(init: Array<any> = []) {\n\n  const observers = new Set<(operation: string, args: any, result: any) => void>();\n\n  const notifyObservers = (operation: string, args: any, result: any) => {\n    observers.forEach(callback => callback(operation, args, result));\n  };\n\n  const arrayMethods = ['push', 'pop', 'splice', 'shift', 'unshift', 'sort', 'reverse'];\n\n  return new Proxy(init, {\n    get(target, property, receiver) {\n      // Si on accède à une méthode de tableau, la redéfinir pour inclure la notification\n      if (arrayMethods.includes(property as string)) {\n        return (...args: any[]) => {\n          const result = Array.prototype[property].apply(target, args);\n          // Notifier les observateurs du changement\n          notifyObservers(property as string, args, result);\n          return result;\n        };\n      }\n\n      return Reflect.get(target, property, receiver);\n    },\n\n    set(target, property, value, receiver) {\n      const oldValue = target[property];\n      const result = Reflect.set(target, property, value, receiver);\n\n      if (oldValue !== value) {\n        notifyObservers('set', { index: property, value }, result);\n      }\n\n      return result;\n    },\n  });\n}\n\nObservableArray.prototype.subscribe = function (callback: (operation: string, args: any, result: any) => void) {\n  this.observers.add(callback);\n};\n\nObservableArray.prototype.unsubscribe = function (callback: (operation: string, args: any, result: any) => void) {\n  this.observers.delete(callback);\n};\n","import { ObservableObject, ObservableProxy } from \"src/utils\";\nimport { ViewExecutionContext } from \"../templateComponent\";\nimport { WebComponent } from \"../webComponent/model\";\nimport { Effects } from \"../models/effects\";\nimport { IWebComponent } from \"src/webComponent/interface\";\n\ntype _WebComponent = (typeof WebComponent & { $effects : Effects } & IWebComponent);\ntype _ViewExecutionContext = (typeof ViewExecutionContext & { $effects : Effects } & IWebComponent);\n\nconst initializeEffect = function ( this : _WebComponent | _ViewExecutionContext , target : _WebComponent | _ViewExecutionContext , propertyKey:string , dependencies:string[] , value:any ){\n\n  if (!this.$effects) {\n    this.$effects = new Effects().bind( this );\n\n    Object.defineProperty( target , 'effects' , {\n      get : () => {\n        return this.$effects;\n      }\n    })\n\n  }\n\n  // Initialisation de la propriété d'état dans $states si elle n'existe pas\n  if (!(propertyKey in this.$effects)) {\n    this.$effects.set( propertyKey , value );\n  }\n\n  Object.defineProperty( target , propertyKey , {\n    get(){\n      return target.effects.get( propertyKey );\n    },\n    set(newValue){\n\n      target.effects.set( propertyKey , {\n        name : propertyKey,\n        dependencies : dependencies,\n        callback : newValue\n      });\n\n      return true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n}\n\nexport function effect( dependencies:any[] ){\n\n  return ( target:IWebComponent , propertyKey: string , value = null ) => {\n\n    const isWebComponent = target instanceof WebComponent;\n    const isViewExecutionContext = target instanceof ViewExecutionContext;\n\n    // Si le décorateur est appliqué directement sur une instance\n    if (isWebComponent || isViewExecutionContext) {\n\n      initializeEffect.call( target , target , propertyKey , dependencies , value );\n\n    } else {\n\n      // Si le décorateur est appliqué sur le prototype (classe)\n      const originalConnectedCallback:any = target[\"connectedCallback\"] || function () {};\n\n      (target as any).connectedCallback = function () {\n\n        // Initialise l'état à la création de l'instance\n        initializeEffect.call(this , target , propertyKey , dependencies , value);\n        // Appelle la méthode originale connectedCallback si elle existe\n        originalConnectedCallback.call(this , target , propertyKey , dependencies , value);\n\n      };\n    }\n\n    // if( target instanceof WebComponent ){\n\n    //   if('$effects' in target == false)(target as any).$effects = new Effects().bind( target );\n\n    //   Object.defineProperty( target , propertyKey , {\n    //     get(){\n    //       return target[\"$effects\"]?.get( propertyKey );\n    //     },\n    //     set(newValue){\n\n    //       target[\"$effects\"].set( propertyKey , {\n    //         name : propertyKey,\n    //         dependencies : dependencies as any,\n    //         callback : newValue\n    //       });\n          \n    //       return true;\n    //     },\n    //     enumerable: true,\n    //     configurable: true\n    //   });\n\n    // }\n\n    // if( target instanceof ViewExecutionContext ){\n\n    //   if('$effects' in target == false)(target as any).$effects = new Effects().bind( target );\n\n    //   if(!target[propertyKey])Object.defineProperty( target , propertyKey , {\n    //     get(){\n    //       return target.effects.get( propertyKey );\n    //     },\n    //     set(newValue){\n  \n    //       target.effects.set( propertyKey , {\n    //         name : propertyKey,\n    //         dependencies : dependencies as any,\n    //         callback : newValue\n    //       });\n  \n    //       return true;\n    //     },\n    //     enumerable: true,\n    //     configurable: true\n    //   });\n  \n    //   if( value )target[ propertyKey ] = value;\n\n    // }\n  \n  }\n\n}","export * from './model';\nexport * from './types';\nexport * from './interfaces';","import { ViewExecutionContext } from \"./model\";\n\nexport type ViewContext< T = Record<string , any> , States = Record<string , any> > = ViewExecutionContext<T , States> & T;","export {};","import {\n  when,\n  repeat,\n  // ref,\n  children,\n  elements,\n  slotted,\n} from '@microsoft/fast-element';\n\nexport {\n  when,\n  repeat,\n  children,\n  elements,\n  slotted\n}\n\nexport * from './assyncAppend.js';\nexport * from './ref.js';\nexport * from './state.js';\nexport * from './style.js';\nexport * from './until.js';","import { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , html , Binding } from '@microsoft/fast-element';\nimport type { Subscriber , BindingDirective, ExpressionObserver } from '@microsoft/fast-element';\n\nexport class AsyncAppendBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class AsyncAppendDirective<T = any> extends HTMLBindingDirective {\n\n  fn:Promise<T> = null;\n  callback:( result:T ) => ViewTemplate = null;\n\n  constructor( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) {\n    super( new AsyncAppendBindig( (x) => null ) );\n    Object.assign( this , { fn , callback } );\n  }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n\n    return {\n        bind : (source:HTMLView ) => {\n\n          let target = source.targets[targetNodeId];\n\n          this.fn\n          .then(( result ) => {\n            this.callback( result ).render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n          .catch(( error ) => {\n            console.error(error)\n            html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n          })\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ){\n    return new AsyncAppendDirective( fn , callback);\n  }\n\n}\n\nHTMLDirective.define( AsyncAppendDirective );\n\nexport { Subscriber }\n\nexport const asyncAppend = <T = any>( fn:Promise<T> , callback:( result:T ) => ViewTemplate ) => AsyncAppendDirective.use<T>( fn , callback );","import { HTMLDirective, HTMLView, Binding, BindingDirective, ExpressionObserver, Subscriber, StatelessAttachedAttributeDirective } from '@microsoft/fast-element';\n\nexport interface IElementRef< T extends Node >{\n  value : T;\n}\n\nexport function createRef< T extends Node >():IElementRef<T>{\n  return {\n    value : null\n  }\n}\n\nexport class RefDirective<T extends Node> extends StatelessAttachedAttributeDirective<IElementRef<T>> {\n\n  options:IElementRef<T> = null;\n\n  constructor( options:IElementRef<T> ) {\n    super( options );\n    Object.assign( this , { options } )\n  }\n\n  bind(controller: HTMLView): void {\n\n    let { lastChild:target } = controller;\n\n    this.options.value = target as any;\n\n  }\n\n  static use<T extends Node>( options:IElementRef<T> ){\n    return new RefDirective<T>( options );\n  }\n\n}\n\nHTMLDirective.define( RefDirective )\n\nexport const ref = <T extends Node>( options:IElementRef<T> ) => RefDirective.use<T>( options );","// import { ViewTemplate, HTMLBindingDirective, ExecutionContext } from '@microsoft/fast-element';\nimport { State , createState } from '@lithium-framework/state';\nimport { ViewTemplate, HTMLDirective , HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class StateBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StateDirective<T = any> extends HTMLBindingDirective {\n\n    _state:State<T> = null;\n    get state(){ return this._state.mutator[0] }\n    set state( value:T ){ this._state.mutator[1](value) }\n\n    _callback:( newValue:T ) => ViewTemplate = null;\n\n    constructor( state: State<T> , callback:( newValue:T ) => ViewTemplate ) {\n        super( new StateBindig( (x) => null ) );\n        this._state = state;\n        this._callback = callback;\n    }\n\n  createBehavior():any {\n\n    let { targetNodeId } = this;\n    let view:HTMLView = null;\n\n    return {\n        bind : (source:HTMLView) => {\n\n            let target = source.targets[targetNodeId];\n\n            if(this._callback){\n\n                this._state.subscribe(() => {\n                    view.dispose();\n                    view = this._callback( this.state ).render( source , target.parentElement );\n                });\n\n                view = this._callback( this.state ).render( source , target.parentElement );\n\n            }\n\n            else{\n\n                this._state.subscribe(() => {\n                    if(\"textContent\" in target){\n                        target.textContent = `${this.state}`;\n                    }\n                });\n\n                if(\"textContent\" in target){\n                    target.textContent = `${this.state}`;\n                }\n\n            }\n\n        },\n        unbind : () => {\n            // Nettoyage si nécessaire\n        }\n    };\n\n  }\n\n  static use<T = any>( state , callback ){\n    return new StateDirective<T>( state , callback )\n  }\n\n}\n\nHTMLDirective.define( StateDirective )\n\nexport const useState = <T>( state: State<T> , callback?:( newValue:T ) => ViewTemplate ) => StateDirective.use<T>( state , callback );","import { HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\nimport { Properties } from '../utils/css-object';\n\nexport class StyleBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class StyleDirective extends HTMLBindingDirective {\n\n  css:Properties = null;\n\n  constructor( css:Properties ) {\n      super( new StyleBindig( (x) => null ) );\n      Object.assign( this , { css } );\n\n  }\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n  let view:HTMLView = null;\n\n  return {\n      bind : (source:HTMLView) => {\n\n        let target = source.targets[targetNodeId];\n        if(target instanceof HTMLElement)Object.assign( target.style , this.css );\n\n      },\n      unbind : () => {\n          // Nettoyage si nécessaire\n      }\n  };\n\n}\n\nstatic use( css:Properties ){\n  return new StyleDirective( css )\n}\n\n}\n\nHTMLDirective.define( StyleDirective );\n\nexport const style = ( css:Properties ) => StyleDirective.use( css );","import { ViewTemplate , html , HTMLDirective, HTMLBindingDirective, HTMLView , Binding, BindingDirective, ExpressionObserver, Subscriber } from '@microsoft/fast-element';\n\nexport class UntilBindig extends Binding{\n\n  createObserver(subscriber: Subscriber, directive: BindingDirective): ExpressionObserver<any, any, any> {\n\n    console.log({ subscriber , directive })\n\n    return {\n      bind(controller){\n        console.log({ controller })\n      }\n    }\n\n  }\n  \n}\n\nexport class UntilDirective extends HTMLBindingDirective {\n\n  fn:Promise<ViewTemplate> = null;\n  template:ViewTemplate = null;\n\n  constructor( fn:Promise<ViewTemplate> , template:ViewTemplate ) {\n    super( new UntilBindig( (x) => null ) );\n    Object.assign( this , { fn , template } );\n}\n\ncreateBehavior():any {\n\n  let { targetNodeId } = this;\n\n  return {\n    bind : (source:HTMLView) => {\n\n      let target = source.targets[targetNodeId];\n      let loading = this.template.render( source , target instanceof HTMLElement ? target : target.parentElement );\n\n      this.fn\n      .then(( result ) => {\n        loading.dispose()\n        result.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n      .catch(( error ) => {\n        console.error(error);\n        loading.dispose();\n        html`<span>Error: ${error}</span>`.render( source , target instanceof HTMLElement ? target : target.parentElement );\n      })\n\n    },\n    unbind : () => {\n        // Nettoyage si nécessaire\n    }\n};\n\n}\n\nstatic use( fn:Promise<ViewTemplate> , template: ViewTemplate ){\n  return new UntilDirective( fn , template);\n}\n\n}\n\nHTMLDirective.define( UntilDirective );\n\nexport const until = ( fn:Promise<ViewTemplate> , template:ViewTemplate ) => UntilDirective.use( fn , template );","export { \n  customElement , \n  css,\n  // html,\n  ViewTemplate,\n  HTMLView,\n  volatile,\n} from \"@microsoft/fast-element\";\n\nimport {\n  html as _html,\n  HTMLTemplateTag\n} from \"@microsoft/fast-element\"\n\nexport const html:HTMLTemplateTag = _html;\n\nexport { \n  WebComponent \n} from './model';","export * from './render';","import { ViewTemplate } from '@microsoft/fast-element/dist/esm';\nimport { ViewExecutionContext } from '../templateComponent/model';\nimport { WebComponent } from '../webComponent';\n\n// Fonction pour observer les enfants ajoutés\nconst observeChilds = (\n  container: HTMLElement,\n  config: MutationObserverInit,\n  callback: (node: Node) => void\n) => {\n  // Crée un MutationObserver\n  const observer = new MutationObserver((mutationsList, observer) => {\n    // Parcourt toutes les mutations détectées\n    mutationsList.forEach(mutation => {\n      if (mutation.type === 'childList') {\n        // Vérifie si des nœuds ont été ajoutés\n        mutation.addedNodes.forEach(node => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            console.log('Nouvel élément ajouté :', node);\n            callback(node);  // Exécute le callback avec le nœud ajouté\n          }\n        });\n      }\n    });\n  });\n\n  // Démarre l'observation\n  observer.observe(container, config);\n\n  // Retourne l'observer pour pouvoir le déconnecter si besoin\n  return observer;\n};\n\nexport function render< T extends Record<string , any> = {} , Storage extends Record<string , any> = Record<string , any> >(template: ViewTemplate<ViewExecutionContext<any, Record<string, any>>, any>, container: HTMLElement = document.body , data = {} ) {\n\n  let context = ViewExecutionContext.init(data);\n\n  let observer = observeChilds( \n    container, \n    {\n      childList: true,  // Observe les ajouts et suppressions d'enfants\n      subtree: false    // Si true, observe tous les descendants du parent\n    },\n    ( node ) => {\n\n      if( node instanceof WebComponent == false ){\n        if(context[\"effects\"])context[\"effects\"].execute();\n      }\n\n      observer.disconnect();\n    }\n  );\n\n  let element = template.render( context , container);\n\n  return element;\n\n}"],"names":["Effects","DecoratorAttributeConfiguration","attr","state","attrState","options","target","propertyKey","observable","ViewExecutionContext","WebComponent","ObservableObject","ObservableProxy","_WebComponent","$states","_ViewExecutionContext","initializeState","this","value","init","Object","defineProperty","get","set","newValue","enumerable","configurable","x","isWebComponent","isViewExecutionContext","call","originalConnectedCallback","connectedCallback","ViewTemplate","ViewContext","IEffect","IWebComponent","bindEffect","bindState","bindConsumable","Record","states","effects","$effects","constructor","data","T","bind","assign","key","States","Value","setter","effect_name","callback","dependencies","Observable","subscribe","unsubscribe","keys","values","initialObject","observabe","createProxy","$data","observers","propKey","oldValue","Set","add","delete","notify","forEach","Proxy","store","result","undefined","error","console","name","Map","execute","effects_without_depedencies","filter","effect","length","effects_with_depedencies","useEffect","dependency","log","useState","FASTElement","define","createObservableObject","ObservableArray","State","createState","createStorage","uuid","Key","Array","operation","args","notifyObservers","arrayMethods","property","receiver","includes","prototype","apply","Reflect","index","initializeEffect","when","repeat","children","elements","slotted","HTMLDirective","HTMLBindingDirective","HTMLView","html","Binding","Subscriber","BindingDirective","ExpressionObserver","AsyncAppendBindig","createObserver","subscriber","directive","controller","AsyncAppendDirective","fn","Promise","createBehavior","targetNodeId","source","targets","then","render","HTMLElement","parentElement","catch","unbind","use","asyncAppend","StatelessAttachedAttributeDirective","IElementRef","Node","createRef","RefDirective","lastChild","ref","StateBindig","StateDirective","_state","mutator","_callback","view","dispose","textContent","Properties","StyleBindig","StyleDirective","css","style","UntilBindig","UntilDirective","template","loading","until","customElement","volatile","_html","HTMLTemplateTag","observeChilds","container","config","MutationObserverInit","node","observer","MutationObserver","mutationsList","mutation","type","addedNodes","nodeType","ELEMENT_NODE","observe","document","body","context","childList","subtree","disconnect","element"],"version":3,"file":"index.js.map"}